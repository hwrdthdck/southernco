# Sample metric metadata file with all available configurations.

type: file

sem_conv_version: 1.9.0

status:
  class: receiver
  stability:
    development: [logs]
    beta: [traces]
    stable: [metrics]
  distributions: [contrib]
  warnings:
    - Any additional information that should be brought to the consumer's attention

resource_attributes:
  string.resource.attr:
    description: Resource attribute with any string value.
    type: string
    enabled: true

  string.enum.resource.attr:
    description: Resource attribute with a known set of string values.
    type: string
    enum: [one, two]
    enabled: true

  optional.resource.attr:
    description: Explicitly disabled ResourceAttribute.
    type: string
    enabled: false

  slice.resource.attr:
    description: Resource attribute with a slice value.
    type: slice
    enabled: true

  map.resource.attr:
    description: Resource attribute with a map value.
    type: map 
    enabled: true

attributes:
  string_attr:
    description: Attribute with any string value.
    type: string

  overridden_int_attr:
    name_override: state
    description: Integer attribute with overridden name.
    type: int

  enum_attr:
    description: Attribute with a known set of string values.
    type: string
    enum: [red, green, blue]

  boolean_attr:
    description: Attribute with a boolean value.
    type: bool

  slice_attr:
    description: Attribute with a slice value.
    type: slice

  map_attr:
    description: Attribute with a map value.
    type: map

metrics:
  default.metric:
    enabled: true
    description: Monotonic cumulative sum int metric enabled by default.
    extended_documentation: The metric will be become optional soon.
    unit: s
    sum:
      value_type: int
      monotonic: true
      aggregation: cumulative
    attributes: [string_attr, overridden_int_attr, enum_attr, slice_attr, map_attr]
    warnings:
      if_enabled_not_set: This metric will be disabled by default soon.

  optional.metric:
    enabled: false
    description: "[DEPRECATED] Gauge double metric disabled by default."
    unit: 1
    gauge:
      value_type: double
    attributes: [string_attr, boolean_attr]
    warnings:
      if_configured: This metric is deprecated and will be removed soon.

  default.metric.to_be_removed:
    enabled: true
    description: "[DEPRECATED] Non-monotonic delta sum double metric enabled by default."
    extended_documentation: The metric will be will be removed soon.
    unit: s
    sum:
      value_type: double
      monotonic: false
      aggregation: delta
    warnings:
      if_enabled: This metric is deprecated and will be removed soon.

feature-gates:
  mertricExportNativeClientFeatureGate:
    id: exporter.datadogexporter.metricexportnativeclient
    description: When enabled, metric export in datadogexporter uses native Datadog client APIs instead of Zorkian APIs.
    stage: Beta

  useOTTLBridge:
    id: filter.filtermetric.useOTTLBridge
    description: When enabled, filterlog will convert filterlog configuration to OTTL and use filterottl evaluation
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18642

  enableSha256Gate:
    id: coreinternal.attraction.hash.sha256
    description: When enabled, switches hashing algorithm from SHA-1 to SHA-2 256
    stage: Beta

  allowFileDeletion:
    id: filelog.allowFileDeletion
    description: When enabled, allows usage of the `delete_after_read` setting.
    stage: Alpha
    refereanceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16314

  AllowHeaderMetadataParsing:
    id: filelog.allowHeaderMetadataParsing
    description: When enabled, allows usage of the `header` setting.
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18198

  dropSanitizationGate:
    id: pkg.translator.prometheus.PermissiveLabelSanitization
    description: Controls whether to change labels starting with '_' to 'key_'.
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/8950

  normalizeNameGate:
    id: pkg.translator.prometheus.NormalizeName
    description: Controls whether metrics names are automatically normalized to follow Prometheus naming convention
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/8950

  enableRFC3339Timestamp:
    id: k8sattr.rfc3339
    description: When enabled, uses RFC3339 format for k8s.pod.start_time value
    stage: Alpha
    fromVersion: v0.82.0

  virtualNodeFeatureGate:
    id: processor.servicegraph.virtualNode
    description: When enabled, when the edge expires, processor checks if it has peer attributes(`db.name, net.sock.peer.addr, net.peer.name, rpc.service, http.url, http.target`), and then aggregate the metrics with virtual node.
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/17196

  legacyMetricNamesFeatureGate:
    id: processor.servicegraph.legacyLatencyMetricNames
    description: When enabled, processor uses legacy latency metric names.
    stage: Alpha
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18743,https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16578

  dropSanitizationGate:
    id: processor.spanmetrics.PermissiveLabelSanitization
    description: Controls whether to change labels starting with '_' to 'key_'
    stage: Alpha

  connectorsAsSumGate:
    id: receiver.nginx.emitConnectionsCurrentAsSum
    description: When enabled, the receiver will emit the 'nginx.connections_current' metric as a nonmonotonic sum, rather than a gauge.
    stage: Beta
    referenceURL: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/4326
    fromVersion: v0.78.0

  useCreatedMetricGate:
    id: receiver.prometheusreceiver.UseCreatedMetric
    description: When enabled, the Prometheus receiver will retrieve the start time for Summary, Histogram and Sum metrics from _created metric
    stage: Alpha