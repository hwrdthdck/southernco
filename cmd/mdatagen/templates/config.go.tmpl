// Code generated by mdatagen. DO NOT EDIT.

package {{ .Package }}

{{ if .Metrics -}}
import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for {{ .Type }} metrics.
type MetricsSettings struct {
	{{- range $name, $metric := .Metrics }}
	{{ $name.Render }} MetricSettings `mapstructure:"{{ $name }}"`
	{{- end }}
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		{{- range $name, $metric := .Metrics }}
		{{ $name.Render }}: MetricSettings{
			Enabled: {{ $metric.Enabled }},
		},
		{{- end }}
	}
}
{{- end }}

{{ if .ResourceAttributes -}}
// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for {{ .Type }} resource attributes.
type ResourceAttributesSettings struct {
	{{- range $name, $attr := .ResourceAttributes }}
	{{ $name.Render }} ResourceAttributeSettings `mapstructure:"{{ $name }}"`
	{{- end }}
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		{{- range $name, $attr := .ResourceAttributes }}
		{{ $name.Render }}: ResourceAttributeSettings {
			Enabled: {{ $attr.Enabled }},
		},
		{{- end }}
	}
}
{{- end }}

{{ if .Metrics -}}
// MetricsBuilderConfig is a configuration for {{ .Type }} metrics builder.
type MetricsBuilderConfig struct {
    Metrics MetricsSettings `mapstructure:"metrics"`
    {{- if .ResourceAttributes }}
    ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
    {{- end }}
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig {
		Metrics: DefaultMetricsSettings(),
		{{- if .ResourceAttributes }}
		ResourceAttributes: DefaultResourceAttributesSettings(),
		{{- end }}
	}
}
{{- end }}
