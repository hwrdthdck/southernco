// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for dockerstatsreceiver metrics.
type MetricsSettings struct {
	ContainerBlockioIoMergedRecursive          MetricSettings `mapstructure:"container.blockio.io_merged_recursive"`
	ContainerBlockioIoQueuedRecursive          MetricSettings `mapstructure:"container.blockio.io_queued_recursive"`
	ContainerBlockioIoServiceBytesRecursive    MetricSettings `mapstructure:"container.blockio.io_service_bytes_recursive"`
	ContainerBlockioIoServiceTimeRecursive     MetricSettings `mapstructure:"container.blockio.io_service_time_recursive"`
	ContainerBlockioIoServicedRecursive        MetricSettings `mapstructure:"container.blockio.io_serviced_recursive"`
	ContainerBlockioIoTimeRecursive            MetricSettings `mapstructure:"container.blockio.io_time_recursive"`
	ContainerBlockioIoWaitTimeRecursive        MetricSettings `mapstructure:"container.blockio.io_wait_time_recursive"`
	ContainerBlockioSectorsRecursive           MetricSettings `mapstructure:"container.blockio.sectors_recursive"`
	ContainerCPUPercent                        MetricSettings `mapstructure:"container.cpu.percent"`
	ContainerCPUThrottlingDataPeriods          MetricSettings `mapstructure:"container.cpu.throttling_data.periods"`
	ContainerCPUThrottlingDataThrottledPeriods MetricSettings `mapstructure:"container.cpu.throttling_data.throttled_periods"`
	ContainerCPUThrottlingDataThrottledTime    MetricSettings `mapstructure:"container.cpu.throttling_data.throttled_time"`
	ContainerCPUUsageKernelmode                MetricSettings `mapstructure:"container.cpu.usage.kernelmode"`
	ContainerCPUUsagePercpu                    MetricSettings `mapstructure:"container.cpu.usage.percpu"`
	ContainerCPUUsageSystem                    MetricSettings `mapstructure:"container.cpu.usage.system"`
	ContainerCPUUsageTotal                     MetricSettings `mapstructure:"container.cpu.usage.total"`
	ContainerCPUUsageUsermode                  MetricSettings `mapstructure:"container.cpu.usage.usermode"`
	ContainerMemoryActiveAnon                  MetricSettings `mapstructure:"container.memory.active_anon"`
	ContainerMemoryActiveFile                  MetricSettings `mapstructure:"container.memory.active_file"`
	ContainerMemoryCache                       MetricSettings `mapstructure:"container.memory.cache"`
	ContainerMemoryDirty                       MetricSettings `mapstructure:"container.memory.dirty"`
	ContainerMemoryHierarchicalMemoryLimit     MetricSettings `mapstructure:"container.memory.hierarchical_memory_limit"`
	ContainerMemoryHierarchicalMemswLimit      MetricSettings `mapstructure:"container.memory.hierarchical_memsw_limit"`
	ContainerMemoryInactiveAnon                MetricSettings `mapstructure:"container.memory.inactive_anon"`
	ContainerMemoryInactiveFile                MetricSettings `mapstructure:"container.memory.inactive_file"`
	ContainerMemoryMappedFile                  MetricSettings `mapstructure:"container.memory.mapped_file"`
	ContainerMemoryPercent                     MetricSettings `mapstructure:"container.memory.percent"`
	ContainerMemoryPgfault                     MetricSettings `mapstructure:"container.memory.pgfault"`
	ContainerMemoryPgmajfault                  MetricSettings `mapstructure:"container.memory.pgmajfault"`
	ContainerMemoryPgpgin                      MetricSettings `mapstructure:"container.memory.pgpgin"`
	ContainerMemoryPgpgout                     MetricSettings `mapstructure:"container.memory.pgpgout"`
	ContainerMemoryRss                         MetricSettings `mapstructure:"container.memory.rss"`
	ContainerMemoryRssHuge                     MetricSettings `mapstructure:"container.memory.rss_huge"`
	ContainerMemorySwap                        MetricSettings `mapstructure:"container.memory.swap"`
	ContainerMemoryTotalActiveAnon             MetricSettings `mapstructure:"container.memory.total_active_anon"`
	ContainerMemoryTotalActiveFile             MetricSettings `mapstructure:"container.memory.total_active_file"`
	ContainerMemoryTotalCache                  MetricSettings `mapstructure:"container.memory.total_cache"`
	ContainerMemoryTotalDirty                  MetricSettings `mapstructure:"container.memory.total_dirty"`
	ContainerMemoryTotalInactiveAnon           MetricSettings `mapstructure:"container.memory.total_inactive_anon"`
	ContainerMemoryTotalInactiveFile           MetricSettings `mapstructure:"container.memory.total_inactive_file"`
	ContainerMemoryTotalMappedFile             MetricSettings `mapstructure:"container.memory.total_mapped_file"`
	ContainerMemoryTotalPgfault                MetricSettings `mapstructure:"container.memory.total_pgfault"`
	ContainerMemoryTotalPgmajfault             MetricSettings `mapstructure:"container.memory.total_pgmajfault"`
	ContainerMemoryTotalPgpgin                 MetricSettings `mapstructure:"container.memory.total_pgpgin"`
	ContainerMemoryTotalPgpgout                MetricSettings `mapstructure:"container.memory.total_pgpgout"`
	ContainerMemoryTotalRss                    MetricSettings `mapstructure:"container.memory.total_rss"`
	ContainerMemoryTotalRssHuge                MetricSettings `mapstructure:"container.memory.total_rss_huge"`
	ContainerMemoryTotalSwap                   MetricSettings `mapstructure:"container.memory.total_swap"`
	ContainerMemoryTotalUnevictable            MetricSettings `mapstructure:"container.memory.total_unevictable"`
	ContainerMemoryTotalWriteback              MetricSettings `mapstructure:"container.memory.total_writeback"`
	ContainerMemoryUnevictable                 MetricSettings `mapstructure:"container.memory.unevictable"`
	ContainerMemoryUsageLimit                  MetricSettings `mapstructure:"container.memory.usage.limit"`
	ContainerMemoryUsageMax                    MetricSettings `mapstructure:"container.memory.usage.max"`
	ContainerMemoryUsageTotal                  MetricSettings `mapstructure:"container.memory.usage.total"`
	ContainerMemoryWriteback                   MetricSettings `mapstructure:"container.memory.writeback"`
	ContainerNetworkIoUsageRxBytes             MetricSettings `mapstructure:"container.network.io.usage.rx_bytes"`
	ContainerNetworkIoUsageRxDropped           MetricSettings `mapstructure:"container.network.io.usage.rx_dropped"`
	ContainerNetworkIoUsageRxErrors            MetricSettings `mapstructure:"container.network.io.usage.rx_errors"`
	ContainerNetworkIoUsageRxPackets           MetricSettings `mapstructure:"container.network.io.usage.rx_packets"`
	ContainerNetworkIoUsageTxBytes             MetricSettings `mapstructure:"container.network.io.usage.tx_bytes"`
	ContainerNetworkIoUsageTxDropped           MetricSettings `mapstructure:"container.network.io.usage.tx_dropped"`
	ContainerNetworkIoUsageTxErrors            MetricSettings `mapstructure:"container.network.io.usage.tx_errors"`
	ContainerNetworkIoUsageTxPackets           MetricSettings `mapstructure:"container.network.io.usage.tx_packets"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		ContainerBlockioIoMergedRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioIoQueuedRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioIoServiceBytesRecursive: MetricSettings{
			Enabled: true,
		},
		ContainerBlockioIoServiceTimeRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioIoServicedRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioIoTimeRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioIoWaitTimeRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerBlockioSectorsRecursive: MetricSettings{
			Enabled: false,
		},
		ContainerCPUPercent: MetricSettings{
			Enabled: true,
		},
		ContainerCPUThrottlingDataPeriods: MetricSettings{
			Enabled: false,
		},
		ContainerCPUThrottlingDataThrottledPeriods: MetricSettings{
			Enabled: false,
		},
		ContainerCPUThrottlingDataThrottledTime: MetricSettings{
			Enabled: false,
		},
		ContainerCPUUsageKernelmode: MetricSettings{
			Enabled: true,
		},
		ContainerCPUUsagePercpu: MetricSettings{
			Enabled: false,
		},
		ContainerCPUUsageSystem: MetricSettings{
			Enabled: false,
		},
		ContainerCPUUsageTotal: MetricSettings{
			Enabled: true,
		},
		ContainerCPUUsageUsermode: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryActiveAnon: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryActiveFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryCache: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryDirty: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryHierarchicalMemoryLimit: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryHierarchicalMemswLimit: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryInactiveAnon: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryInactiveFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryMappedFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryPercent: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryPgfault: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryPgmajfault: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryPgpgin: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryPgpgout: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryRss: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryRssHuge: MetricSettings{
			Enabled: false,
		},
		ContainerMemorySwap: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalActiveAnon: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalActiveFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalCache: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryTotalDirty: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalInactiveAnon: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalInactiveFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalMappedFile: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalPgfault: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalPgmajfault: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalPgpgin: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalPgpgout: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalRss: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalRssHuge: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalSwap: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalUnevictable: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryTotalWriteback: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryUnevictable: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryUsageLimit: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryUsageMax: MetricSettings{
			Enabled: false,
		},
		ContainerMemoryUsageTotal: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryWriteback: MetricSettings{
			Enabled: false,
		},
		ContainerNetworkIoUsageRxBytes: MetricSettings{
			Enabled: true,
		},
		ContainerNetworkIoUsageRxDropped: MetricSettings{
			Enabled: true,
		},
		ContainerNetworkIoUsageRxErrors: MetricSettings{
			Enabled: false,
		},
		ContainerNetworkIoUsageRxPackets: MetricSettings{
			Enabled: false,
		},
		ContainerNetworkIoUsageTxBytes: MetricSettings{
			Enabled: true,
		},
		ContainerNetworkIoUsageTxDropped: MetricSettings{
			Enabled: true,
		},
		ContainerNetworkIoUsageTxErrors: MetricSettings{
			Enabled: false,
		},
		ContainerNetworkIoUsageTxPackets: MetricSettings{
			Enabled: false,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for dockerstatsreceiver resource attributes.
type ResourceAttributesSettings struct {
	ContainerHostname  ResourceAttributeSettings `mapstructure:"container.hostname"`
	ContainerID        ResourceAttributeSettings `mapstructure:"container.id"`
	ContainerImageName ResourceAttributeSettings `mapstructure:"container.image.name"`
	ContainerName      ResourceAttributeSettings `mapstructure:"container.name"`
	ContainerRuntime   ResourceAttributeSettings `mapstructure:"container.runtime"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		ContainerHostname: ResourceAttributeSettings{
			Enabled: true,
		},
		ContainerID: ResourceAttributeSettings{
			Enabled: true,
		},
		ContainerImageName: ResourceAttributeSettings{
			Enabled: true,
		},
		ContainerName: ResourceAttributeSettings{
			Enabled: true,
		},
		ContainerRuntime: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for dockerstatsreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
