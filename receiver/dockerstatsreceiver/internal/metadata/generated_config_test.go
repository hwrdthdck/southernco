// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/confmap/confmaptest"
)

func TestResourceAttributesConfig(t *testing.T) {
	tests := []struct {
		name string
		want ResourceAttributesSettings
	}{
		{
			name: "default",
			want: DefaultResourceAttributesSettings(),
		},
		{
			name: "all_set",
			want: ResourceAttributesSettings{
				ContainerHostname:  ResourceAttributeSettings{Enabled: true},
				ContainerID:        ResourceAttributeSettings{Enabled: true},
				ContainerImageName: ResourceAttributeSettings{Enabled: true},
				ContainerName:      ResourceAttributeSettings{Enabled: true},
				ContainerRuntime:   ResourceAttributeSettings{Enabled: true},
			},
		},
		{
			name: "none_set",
			want: ResourceAttributesSettings{
				ContainerHostname:  ResourceAttributeSettings{Enabled: false},
				ContainerID:        ResourceAttributeSettings{Enabled: false},
				ContainerImageName: ResourceAttributeSettings{Enabled: false},
				ContainerName:      ResourceAttributeSettings{Enabled: false},
				ContainerRuntime:   ResourceAttributeSettings{Enabled: false},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadResourceAttributesSettings(t, tt.name)
			if diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(ResourceAttributeSettings{})); diff != "" {
				t.Errorf("Config mismatch (-expected +actual):\n%s", diff)
			}
		})
	}
}

func TestMetricsBuilderConfig(t *testing.T) {
	tests := []struct {
		name string
		want MetricsBuilderConfig
	}{
		{
			name: "default",
			want: DefaultMetricsBuilderConfig(),
		},
		{
			name: "all_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsSettings{
					ContainerBlockioIoMergedRecursive:          MetricSettings{Enabled: true},
					ContainerBlockioIoQueuedRecursive:          MetricSettings{Enabled: true},
					ContainerBlockioIoServiceBytesRecursive:    MetricSettings{Enabled: true},
					ContainerBlockioIoServiceTimeRecursive:     MetricSettings{Enabled: true},
					ContainerBlockioIoServicedRecursive:        MetricSettings{Enabled: true},
					ContainerBlockioIoTimeRecursive:            MetricSettings{Enabled: true},
					ContainerBlockioIoWaitTimeRecursive:        MetricSettings{Enabled: true},
					ContainerBlockioSectorsRecursive:           MetricSettings{Enabled: true},
					ContainerCPUPercent:                        MetricSettings{Enabled: true},
					ContainerCPUThrottlingDataPeriods:          MetricSettings{Enabled: true},
					ContainerCPUThrottlingDataThrottledPeriods: MetricSettings{Enabled: true},
					ContainerCPUThrottlingDataThrottledTime:    MetricSettings{Enabled: true},
					ContainerCPUUsageKernelmode:                MetricSettings{Enabled: true},
					ContainerCPUUsagePercpu:                    MetricSettings{Enabled: true},
					ContainerCPUUsageSystem:                    MetricSettings{Enabled: true},
					ContainerCPUUsageTotal:                     MetricSettings{Enabled: true},
					ContainerCPUUsageUsermode:                  MetricSettings{Enabled: true},
					ContainerMemoryActiveAnon:                  MetricSettings{Enabled: true},
					ContainerMemoryActiveFile:                  MetricSettings{Enabled: true},
					ContainerMemoryCache:                       MetricSettings{Enabled: true},
					ContainerMemoryDirty:                       MetricSettings{Enabled: true},
					ContainerMemoryHierarchicalMemoryLimit:     MetricSettings{Enabled: true},
					ContainerMemoryHierarchicalMemswLimit:      MetricSettings{Enabled: true},
					ContainerMemoryInactiveAnon:                MetricSettings{Enabled: true},
					ContainerMemoryInactiveFile:                MetricSettings{Enabled: true},
					ContainerMemoryMappedFile:                  MetricSettings{Enabled: true},
					ContainerMemoryPercent:                     MetricSettings{Enabled: true},
					ContainerMemoryPgfault:                     MetricSettings{Enabled: true},
					ContainerMemoryPgmajfault:                  MetricSettings{Enabled: true},
					ContainerMemoryPgpgin:                      MetricSettings{Enabled: true},
					ContainerMemoryPgpgout:                     MetricSettings{Enabled: true},
					ContainerMemoryRss:                         MetricSettings{Enabled: true},
					ContainerMemoryRssHuge:                     MetricSettings{Enabled: true},
					ContainerMemorySwap:                        MetricSettings{Enabled: true},
					ContainerMemoryTotalActiveAnon:             MetricSettings{Enabled: true},
					ContainerMemoryTotalActiveFile:             MetricSettings{Enabled: true},
					ContainerMemoryTotalCache:                  MetricSettings{Enabled: true},
					ContainerMemoryTotalDirty:                  MetricSettings{Enabled: true},
					ContainerMemoryTotalInactiveAnon:           MetricSettings{Enabled: true},
					ContainerMemoryTotalInactiveFile:           MetricSettings{Enabled: true},
					ContainerMemoryTotalMappedFile:             MetricSettings{Enabled: true},
					ContainerMemoryTotalPgfault:                MetricSettings{Enabled: true},
					ContainerMemoryTotalPgmajfault:             MetricSettings{Enabled: true},
					ContainerMemoryTotalPgpgin:                 MetricSettings{Enabled: true},
					ContainerMemoryTotalPgpgout:                MetricSettings{Enabled: true},
					ContainerMemoryTotalRss:                    MetricSettings{Enabled: true},
					ContainerMemoryTotalRssHuge:                MetricSettings{Enabled: true},
					ContainerMemoryTotalSwap:                   MetricSettings{Enabled: true},
					ContainerMemoryTotalUnevictable:            MetricSettings{Enabled: true},
					ContainerMemoryTotalWriteback:              MetricSettings{Enabled: true},
					ContainerMemoryUnevictable:                 MetricSettings{Enabled: true},
					ContainerMemoryUsageLimit:                  MetricSettings{Enabled: true},
					ContainerMemoryUsageMax:                    MetricSettings{Enabled: true},
					ContainerMemoryUsageTotal:                  MetricSettings{Enabled: true},
					ContainerMemoryWriteback:                   MetricSettings{Enabled: true},
					ContainerNetworkIoUsageRxBytes:             MetricSettings{Enabled: true},
					ContainerNetworkIoUsageRxDropped:           MetricSettings{Enabled: true},
					ContainerNetworkIoUsageRxErrors:            MetricSettings{Enabled: true},
					ContainerNetworkIoUsageRxPackets:           MetricSettings{Enabled: true},
					ContainerNetworkIoUsageTxBytes:             MetricSettings{Enabled: true},
					ContainerNetworkIoUsageTxDropped:           MetricSettings{Enabled: true},
					ContainerNetworkIoUsageTxErrors:            MetricSettings{Enabled: true},
					ContainerNetworkIoUsageTxPackets:           MetricSettings{Enabled: true},
				},
				ResourceAttributes: ResourceAttributesSettings{
					ContainerHostname:  ResourceAttributeSettings{Enabled: true},
					ContainerID:        ResourceAttributeSettings{Enabled: true},
					ContainerImageName: ResourceAttributeSettings{Enabled: true},
					ContainerName:      ResourceAttributeSettings{Enabled: true},
					ContainerRuntime:   ResourceAttributeSettings{Enabled: true},
				},
			},
		},
		{
			name: "none_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsSettings{
					ContainerBlockioIoMergedRecursive:          MetricSettings{Enabled: false},
					ContainerBlockioIoQueuedRecursive:          MetricSettings{Enabled: false},
					ContainerBlockioIoServiceBytesRecursive:    MetricSettings{Enabled: false},
					ContainerBlockioIoServiceTimeRecursive:     MetricSettings{Enabled: false},
					ContainerBlockioIoServicedRecursive:        MetricSettings{Enabled: false},
					ContainerBlockioIoTimeRecursive:            MetricSettings{Enabled: false},
					ContainerBlockioIoWaitTimeRecursive:        MetricSettings{Enabled: false},
					ContainerBlockioSectorsRecursive:           MetricSettings{Enabled: false},
					ContainerCPUPercent:                        MetricSettings{Enabled: false},
					ContainerCPUThrottlingDataPeriods:          MetricSettings{Enabled: false},
					ContainerCPUThrottlingDataThrottledPeriods: MetricSettings{Enabled: false},
					ContainerCPUThrottlingDataThrottledTime:    MetricSettings{Enabled: false},
					ContainerCPUUsageKernelmode:                MetricSettings{Enabled: false},
					ContainerCPUUsagePercpu:                    MetricSettings{Enabled: false},
					ContainerCPUUsageSystem:                    MetricSettings{Enabled: false},
					ContainerCPUUsageTotal:                     MetricSettings{Enabled: false},
					ContainerCPUUsageUsermode:                  MetricSettings{Enabled: false},
					ContainerMemoryActiveAnon:                  MetricSettings{Enabled: false},
					ContainerMemoryActiveFile:                  MetricSettings{Enabled: false},
					ContainerMemoryCache:                       MetricSettings{Enabled: false},
					ContainerMemoryDirty:                       MetricSettings{Enabled: false},
					ContainerMemoryHierarchicalMemoryLimit:     MetricSettings{Enabled: false},
					ContainerMemoryHierarchicalMemswLimit:      MetricSettings{Enabled: false},
					ContainerMemoryInactiveAnon:                MetricSettings{Enabled: false},
					ContainerMemoryInactiveFile:                MetricSettings{Enabled: false},
					ContainerMemoryMappedFile:                  MetricSettings{Enabled: false},
					ContainerMemoryPercent:                     MetricSettings{Enabled: false},
					ContainerMemoryPgfault:                     MetricSettings{Enabled: false},
					ContainerMemoryPgmajfault:                  MetricSettings{Enabled: false},
					ContainerMemoryPgpgin:                      MetricSettings{Enabled: false},
					ContainerMemoryPgpgout:                     MetricSettings{Enabled: false},
					ContainerMemoryRss:                         MetricSettings{Enabled: false},
					ContainerMemoryRssHuge:                     MetricSettings{Enabled: false},
					ContainerMemorySwap:                        MetricSettings{Enabled: false},
					ContainerMemoryTotalActiveAnon:             MetricSettings{Enabled: false},
					ContainerMemoryTotalActiveFile:             MetricSettings{Enabled: false},
					ContainerMemoryTotalCache:                  MetricSettings{Enabled: false},
					ContainerMemoryTotalDirty:                  MetricSettings{Enabled: false},
					ContainerMemoryTotalInactiveAnon:           MetricSettings{Enabled: false},
					ContainerMemoryTotalInactiveFile:           MetricSettings{Enabled: false},
					ContainerMemoryTotalMappedFile:             MetricSettings{Enabled: false},
					ContainerMemoryTotalPgfault:                MetricSettings{Enabled: false},
					ContainerMemoryTotalPgmajfault:             MetricSettings{Enabled: false},
					ContainerMemoryTotalPgpgin:                 MetricSettings{Enabled: false},
					ContainerMemoryTotalPgpgout:                MetricSettings{Enabled: false},
					ContainerMemoryTotalRss:                    MetricSettings{Enabled: false},
					ContainerMemoryTotalRssHuge:                MetricSettings{Enabled: false},
					ContainerMemoryTotalSwap:                   MetricSettings{Enabled: false},
					ContainerMemoryTotalUnevictable:            MetricSettings{Enabled: false},
					ContainerMemoryTotalWriteback:              MetricSettings{Enabled: false},
					ContainerMemoryUnevictable:                 MetricSettings{Enabled: false},
					ContainerMemoryUsageLimit:                  MetricSettings{Enabled: false},
					ContainerMemoryUsageMax:                    MetricSettings{Enabled: false},
					ContainerMemoryUsageTotal:                  MetricSettings{Enabled: false},
					ContainerMemoryWriteback:                   MetricSettings{Enabled: false},
					ContainerNetworkIoUsageRxBytes:             MetricSettings{Enabled: false},
					ContainerNetworkIoUsageRxDropped:           MetricSettings{Enabled: false},
					ContainerNetworkIoUsageRxErrors:            MetricSettings{Enabled: false},
					ContainerNetworkIoUsageRxPackets:           MetricSettings{Enabled: false},
					ContainerNetworkIoUsageTxBytes:             MetricSettings{Enabled: false},
					ContainerNetworkIoUsageTxDropped:           MetricSettings{Enabled: false},
					ContainerNetworkIoUsageTxErrors:            MetricSettings{Enabled: false},
					ContainerNetworkIoUsageTxPackets:           MetricSettings{Enabled: false},
				},
				ResourceAttributes: ResourceAttributesSettings{
					ContainerHostname:  ResourceAttributeSettings{Enabled: false},
					ContainerID:        ResourceAttributeSettings{Enabled: false},
					ContainerImageName: ResourceAttributeSettings{Enabled: false},
					ContainerName:      ResourceAttributeSettings{Enabled: false},
					ContainerRuntime:   ResourceAttributeSettings{Enabled: false},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadMetricsBuilderConfig(t, tt.name)
			if diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(MetricSettings{}, ResourceAttributeSettings{})); diff != "" {
				t.Errorf("Config mismatch (-expected +actual):\n%s", diff)
			}
		})
	}
}

func loadResourceAttributesSettings(t *testing.T, name string) ResourceAttributesSettings {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	sub, err = sub.Sub("resource_attributes")
	require.NoError(t, err)
	cfg := DefaultResourceAttributesSettings()
	require.NoError(t, component.UnmarshalConfig(sub, &cfg))
	return cfg
}

func loadMetricsBuilderConfig(t *testing.T, name string) MetricsBuilderConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	cfg := DefaultMetricsBuilderConfig()
	require.NoError(t, component.UnmarshalConfig(sub, &cfg))
	return cfg
}
