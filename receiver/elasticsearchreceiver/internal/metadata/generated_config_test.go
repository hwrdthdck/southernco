// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/confmap/confmaptest"
)

func TestResourceAttributesConfig(t *testing.T) {
	tests := []struct {
		name string
		want ResourceAttributesSettings
	}{
		{
			name: "default",
			want: DefaultResourceAttributesSettings(),
		},
		{
			name: "all_set",
			want: ResourceAttributesSettings{
				ElasticsearchClusterName: ResourceAttributeSettings{Enabled: true},
				ElasticsearchIndexName:   ResourceAttributeSettings{Enabled: true},
				ElasticsearchNodeName:    ResourceAttributeSettings{Enabled: true},
				ElasticsearchNodeVersion: ResourceAttributeSettings{Enabled: true},
			},
		},
		{
			name: "none_set",
			want: ResourceAttributesSettings{
				ElasticsearchClusterName: ResourceAttributeSettings{Enabled: false},
				ElasticsearchIndexName:   ResourceAttributeSettings{Enabled: false},
				ElasticsearchNodeName:    ResourceAttributeSettings{Enabled: false},
				ElasticsearchNodeVersion: ResourceAttributeSettings{Enabled: false},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadResourceAttributesSettings(t, tt.name)
			if diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(ResourceAttributeSettings{})); diff != "" {
				t.Errorf("Config mismatch (-expected +actual):\n%s", diff)
			}
		})
	}
}

func TestMetricsBuilderConfig(t *testing.T) {
	tests := []struct {
		name string
		want MetricsBuilderConfig
	}{
		{
			name: "default",
			want: DefaultMetricsBuilderConfig(),
		},
		{
			name: "all_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsSettings{
					ElasticsearchBreakerMemoryEstimated:                       MetricSettings{Enabled: true},
					ElasticsearchBreakerMemoryLimit:                           MetricSettings{Enabled: true},
					ElasticsearchBreakerTripped:                               MetricSettings{Enabled: true},
					ElasticsearchClusterDataNodes:                             MetricSettings{Enabled: true},
					ElasticsearchClusterHealth:                                MetricSettings{Enabled: true},
					ElasticsearchClusterInFlightFetch:                         MetricSettings{Enabled: true},
					ElasticsearchClusterIndicesCacheEvictions:                 MetricSettings{Enabled: true},
					ElasticsearchClusterNodes:                                 MetricSettings{Enabled: true},
					ElasticsearchClusterPendingTasks:                          MetricSettings{Enabled: true},
					ElasticsearchClusterPublishedStatesDifferences:            MetricSettings{Enabled: true},
					ElasticsearchClusterPublishedStatesFull:                   MetricSettings{Enabled: true},
					ElasticsearchClusterShards:                                MetricSettings{Enabled: true},
					ElasticsearchClusterStateQueue:                            MetricSettings{Enabled: true},
					ElasticsearchClusterStateUpdateCount:                      MetricSettings{Enabled: true},
					ElasticsearchClusterStateUpdateTime:                       MetricSettings{Enabled: true},
					ElasticsearchIndexCacheEvictions:                          MetricSettings{Enabled: true},
					ElasticsearchIndexCacheMemoryUsage:                        MetricSettings{Enabled: true},
					ElasticsearchIndexCacheSize:                               MetricSettings{Enabled: true},
					ElasticsearchIndexDocuments:                               MetricSettings{Enabled: true},
					ElasticsearchIndexOperationsCompleted:                     MetricSettings{Enabled: true},
					ElasticsearchIndexOperationsMergeDocsCount:                MetricSettings{Enabled: true},
					ElasticsearchIndexOperationsMergeSize:                     MetricSettings{Enabled: true},
					ElasticsearchIndexOperationsTime:                          MetricSettings{Enabled: true},
					ElasticsearchIndexSegmentsCount:                           MetricSettings{Enabled: true},
					ElasticsearchIndexSegmentsMemory:                          MetricSettings{Enabled: true},
					ElasticsearchIndexSegmentsSize:                            MetricSettings{Enabled: true},
					ElasticsearchIndexShardsSize:                              MetricSettings{Enabled: true},
					ElasticsearchIndexTranslogOperations:                      MetricSettings{Enabled: true},
					ElasticsearchIndexTranslogSize:                            MetricSettings{Enabled: true},
					ElasticsearchIndexingPressureMemoryLimit:                  MetricSettings{Enabled: true},
					ElasticsearchIndexingPressureMemoryTotalPrimaryRejections: MetricSettings{Enabled: true},
					ElasticsearchIndexingPressureMemoryTotalReplicaRejections: MetricSettings{Enabled: true},
					ElasticsearchMemoryIndexingPressure:                       MetricSettings{Enabled: true},
					ElasticsearchNodeCacheCount:                               MetricSettings{Enabled: true},
					ElasticsearchNodeCacheEvictions:                           MetricSettings{Enabled: true},
					ElasticsearchNodeCacheMemoryUsage:                         MetricSettings{Enabled: true},
					ElasticsearchNodeCacheSize:                                MetricSettings{Enabled: true},
					ElasticsearchNodeClusterConnections:                       MetricSettings{Enabled: true},
					ElasticsearchNodeClusterIo:                                MetricSettings{Enabled: true},
					ElasticsearchNodeDiskIoRead:                               MetricSettings{Enabled: true},
					ElasticsearchNodeDiskIoWrite:                              MetricSettings{Enabled: true},
					ElasticsearchNodeDocuments:                                MetricSettings{Enabled: true},
					ElasticsearchNodeFsDiskAvailable:                          MetricSettings{Enabled: true},
					ElasticsearchNodeFsDiskFree:                               MetricSettings{Enabled: true},
					ElasticsearchNodeFsDiskTotal:                              MetricSettings{Enabled: true},
					ElasticsearchNodeHTTPConnections:                          MetricSettings{Enabled: true},
					ElasticsearchNodeIngestDocuments:                          MetricSettings{Enabled: true},
					ElasticsearchNodeIngestDocumentsCurrent:                   MetricSettings{Enabled: true},
					ElasticsearchNodeIngestOperationsFailed:                   MetricSettings{Enabled: true},
					ElasticsearchNodeOpenFiles:                                MetricSettings{Enabled: true},
					ElasticsearchNodeOperationsCompleted:                      MetricSettings{Enabled: true},
					ElasticsearchNodeOperationsCurrent:                        MetricSettings{Enabled: true},
					ElasticsearchNodeOperationsGetCompleted:                   MetricSettings{Enabled: true},
					ElasticsearchNodeOperationsGetTime:                        MetricSettings{Enabled: true},
					ElasticsearchNodeOperationsTime:                           MetricSettings{Enabled: true},
					ElasticsearchNodePipelineIngestDocumentsCurrent:           MetricSettings{Enabled: true},
					ElasticsearchNodePipelineIngestDocumentsPreprocessed:      MetricSettings{Enabled: true},
					ElasticsearchNodePipelineIngestOperationsFailed:           MetricSettings{Enabled: true},
					ElasticsearchNodeScriptCacheEvictions:                     MetricSettings{Enabled: true},
					ElasticsearchNodeScriptCompilationLimitTriggered:          MetricSettings{Enabled: true},
					ElasticsearchNodeScriptCompilations:                       MetricSettings{Enabled: true},
					ElasticsearchNodeSegmentsMemory:                           MetricSettings{Enabled: true},
					ElasticsearchNodeShardsDataSetSize:                        MetricSettings{Enabled: true},
					ElasticsearchNodeShardsReservedSize:                       MetricSettings{Enabled: true},
					ElasticsearchNodeShardsSize:                               MetricSettings{Enabled: true},
					ElasticsearchNodeThreadPoolTasksFinished:                  MetricSettings{Enabled: true},
					ElasticsearchNodeThreadPoolTasksQueued:                    MetricSettings{Enabled: true},
					ElasticsearchNodeThreadPoolThreads:                        MetricSettings{Enabled: true},
					ElasticsearchNodeTranslogOperations:                       MetricSettings{Enabled: true},
					ElasticsearchNodeTranslogSize:                             MetricSettings{Enabled: true},
					ElasticsearchNodeTranslogUncommittedSize:                  MetricSettings{Enabled: true},
					ElasticsearchOsCPULoadAvg15m:                              MetricSettings{Enabled: true},
					ElasticsearchOsCPULoadAvg1m:                               MetricSettings{Enabled: true},
					ElasticsearchOsCPULoadAvg5m:                               MetricSettings{Enabled: true},
					ElasticsearchOsCPUUsage:                                   MetricSettings{Enabled: true},
					ElasticsearchOsMemory:                                     MetricSettings{Enabled: true},
					ElasticsearchProcessCPUTime:                               MetricSettings{Enabled: true},
					ElasticsearchProcessCPUUsage:                              MetricSettings{Enabled: true},
					ElasticsearchProcessMemoryVirtual:                         MetricSettings{Enabled: true},
					JvmClassesLoaded:                                          MetricSettings{Enabled: true},
					JvmGcCollectionsCount:                                     MetricSettings{Enabled: true},
					JvmGcCollectionsElapsed:                                   MetricSettings{Enabled: true},
					JvmMemoryHeapCommitted:                                    MetricSettings{Enabled: true},
					JvmMemoryHeapMax:                                          MetricSettings{Enabled: true},
					JvmMemoryHeapUsed:                                         MetricSettings{Enabled: true},
					JvmMemoryHeapUtilization:                                  MetricSettings{Enabled: true},
					JvmMemoryNonheapCommitted:                                 MetricSettings{Enabled: true},
					JvmMemoryNonheapUsed:                                      MetricSettings{Enabled: true},
					JvmMemoryPoolMax:                                          MetricSettings{Enabled: true},
					JvmMemoryPoolUsed:                                         MetricSettings{Enabled: true},
					JvmThreadsCount:                                           MetricSettings{Enabled: true},
				},
				ResourceAttributes: ResourceAttributesSettings{
					ElasticsearchClusterName: ResourceAttributeSettings{Enabled: true},
					ElasticsearchIndexName:   ResourceAttributeSettings{Enabled: true},
					ElasticsearchNodeName:    ResourceAttributeSettings{Enabled: true},
					ElasticsearchNodeVersion: ResourceAttributeSettings{Enabled: true},
				},
			},
		},
		{
			name: "none_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsSettings{
					ElasticsearchBreakerMemoryEstimated:                       MetricSettings{Enabled: false},
					ElasticsearchBreakerMemoryLimit:                           MetricSettings{Enabled: false},
					ElasticsearchBreakerTripped:                               MetricSettings{Enabled: false},
					ElasticsearchClusterDataNodes:                             MetricSettings{Enabled: false},
					ElasticsearchClusterHealth:                                MetricSettings{Enabled: false},
					ElasticsearchClusterInFlightFetch:                         MetricSettings{Enabled: false},
					ElasticsearchClusterIndicesCacheEvictions:                 MetricSettings{Enabled: false},
					ElasticsearchClusterNodes:                                 MetricSettings{Enabled: false},
					ElasticsearchClusterPendingTasks:                          MetricSettings{Enabled: false},
					ElasticsearchClusterPublishedStatesDifferences:            MetricSettings{Enabled: false},
					ElasticsearchClusterPublishedStatesFull:                   MetricSettings{Enabled: false},
					ElasticsearchClusterShards:                                MetricSettings{Enabled: false},
					ElasticsearchClusterStateQueue:                            MetricSettings{Enabled: false},
					ElasticsearchClusterStateUpdateCount:                      MetricSettings{Enabled: false},
					ElasticsearchClusterStateUpdateTime:                       MetricSettings{Enabled: false},
					ElasticsearchIndexCacheEvictions:                          MetricSettings{Enabled: false},
					ElasticsearchIndexCacheMemoryUsage:                        MetricSettings{Enabled: false},
					ElasticsearchIndexCacheSize:                               MetricSettings{Enabled: false},
					ElasticsearchIndexDocuments:                               MetricSettings{Enabled: false},
					ElasticsearchIndexOperationsCompleted:                     MetricSettings{Enabled: false},
					ElasticsearchIndexOperationsMergeDocsCount:                MetricSettings{Enabled: false},
					ElasticsearchIndexOperationsMergeSize:                     MetricSettings{Enabled: false},
					ElasticsearchIndexOperationsTime:                          MetricSettings{Enabled: false},
					ElasticsearchIndexSegmentsCount:                           MetricSettings{Enabled: false},
					ElasticsearchIndexSegmentsMemory:                          MetricSettings{Enabled: false},
					ElasticsearchIndexSegmentsSize:                            MetricSettings{Enabled: false},
					ElasticsearchIndexShardsSize:                              MetricSettings{Enabled: false},
					ElasticsearchIndexTranslogOperations:                      MetricSettings{Enabled: false},
					ElasticsearchIndexTranslogSize:                            MetricSettings{Enabled: false},
					ElasticsearchIndexingPressureMemoryLimit:                  MetricSettings{Enabled: false},
					ElasticsearchIndexingPressureMemoryTotalPrimaryRejections: MetricSettings{Enabled: false},
					ElasticsearchIndexingPressureMemoryTotalReplicaRejections: MetricSettings{Enabled: false},
					ElasticsearchMemoryIndexingPressure:                       MetricSettings{Enabled: false},
					ElasticsearchNodeCacheCount:                               MetricSettings{Enabled: false},
					ElasticsearchNodeCacheEvictions:                           MetricSettings{Enabled: false},
					ElasticsearchNodeCacheMemoryUsage:                         MetricSettings{Enabled: false},
					ElasticsearchNodeCacheSize:                                MetricSettings{Enabled: false},
					ElasticsearchNodeClusterConnections:                       MetricSettings{Enabled: false},
					ElasticsearchNodeClusterIo:                                MetricSettings{Enabled: false},
					ElasticsearchNodeDiskIoRead:                               MetricSettings{Enabled: false},
					ElasticsearchNodeDiskIoWrite:                              MetricSettings{Enabled: false},
					ElasticsearchNodeDocuments:                                MetricSettings{Enabled: false},
					ElasticsearchNodeFsDiskAvailable:                          MetricSettings{Enabled: false},
					ElasticsearchNodeFsDiskFree:                               MetricSettings{Enabled: false},
					ElasticsearchNodeFsDiskTotal:                              MetricSettings{Enabled: false},
					ElasticsearchNodeHTTPConnections:                          MetricSettings{Enabled: false},
					ElasticsearchNodeIngestDocuments:                          MetricSettings{Enabled: false},
					ElasticsearchNodeIngestDocumentsCurrent:                   MetricSettings{Enabled: false},
					ElasticsearchNodeIngestOperationsFailed:                   MetricSettings{Enabled: false},
					ElasticsearchNodeOpenFiles:                                MetricSettings{Enabled: false},
					ElasticsearchNodeOperationsCompleted:                      MetricSettings{Enabled: false},
					ElasticsearchNodeOperationsCurrent:                        MetricSettings{Enabled: false},
					ElasticsearchNodeOperationsGetCompleted:                   MetricSettings{Enabled: false},
					ElasticsearchNodeOperationsGetTime:                        MetricSettings{Enabled: false},
					ElasticsearchNodeOperationsTime:                           MetricSettings{Enabled: false},
					ElasticsearchNodePipelineIngestDocumentsCurrent:           MetricSettings{Enabled: false},
					ElasticsearchNodePipelineIngestDocumentsPreprocessed:      MetricSettings{Enabled: false},
					ElasticsearchNodePipelineIngestOperationsFailed:           MetricSettings{Enabled: false},
					ElasticsearchNodeScriptCacheEvictions:                     MetricSettings{Enabled: false},
					ElasticsearchNodeScriptCompilationLimitTriggered:          MetricSettings{Enabled: false},
					ElasticsearchNodeScriptCompilations:                       MetricSettings{Enabled: false},
					ElasticsearchNodeSegmentsMemory:                           MetricSettings{Enabled: false},
					ElasticsearchNodeShardsDataSetSize:                        MetricSettings{Enabled: false},
					ElasticsearchNodeShardsReservedSize:                       MetricSettings{Enabled: false},
					ElasticsearchNodeShardsSize:                               MetricSettings{Enabled: false},
					ElasticsearchNodeThreadPoolTasksFinished:                  MetricSettings{Enabled: false},
					ElasticsearchNodeThreadPoolTasksQueued:                    MetricSettings{Enabled: false},
					ElasticsearchNodeThreadPoolThreads:                        MetricSettings{Enabled: false},
					ElasticsearchNodeTranslogOperations:                       MetricSettings{Enabled: false},
					ElasticsearchNodeTranslogSize:                             MetricSettings{Enabled: false},
					ElasticsearchNodeTranslogUncommittedSize:                  MetricSettings{Enabled: false},
					ElasticsearchOsCPULoadAvg15m:                              MetricSettings{Enabled: false},
					ElasticsearchOsCPULoadAvg1m:                               MetricSettings{Enabled: false},
					ElasticsearchOsCPULoadAvg5m:                               MetricSettings{Enabled: false},
					ElasticsearchOsCPUUsage:                                   MetricSettings{Enabled: false},
					ElasticsearchOsMemory:                                     MetricSettings{Enabled: false},
					ElasticsearchProcessCPUTime:                               MetricSettings{Enabled: false},
					ElasticsearchProcessCPUUsage:                              MetricSettings{Enabled: false},
					ElasticsearchProcessMemoryVirtual:                         MetricSettings{Enabled: false},
					JvmClassesLoaded:                                          MetricSettings{Enabled: false},
					JvmGcCollectionsCount:                                     MetricSettings{Enabled: false},
					JvmGcCollectionsElapsed:                                   MetricSettings{Enabled: false},
					JvmMemoryHeapCommitted:                                    MetricSettings{Enabled: false},
					JvmMemoryHeapMax:                                          MetricSettings{Enabled: false},
					JvmMemoryHeapUsed:                                         MetricSettings{Enabled: false},
					JvmMemoryHeapUtilization:                                  MetricSettings{Enabled: false},
					JvmMemoryNonheapCommitted:                                 MetricSettings{Enabled: false},
					JvmMemoryNonheapUsed:                                      MetricSettings{Enabled: false},
					JvmMemoryPoolMax:                                          MetricSettings{Enabled: false},
					JvmMemoryPoolUsed:                                         MetricSettings{Enabled: false},
					JvmThreadsCount:                                           MetricSettings{Enabled: false},
				},
				ResourceAttributes: ResourceAttributesSettings{
					ElasticsearchClusterName: ResourceAttributeSettings{Enabled: false},
					ElasticsearchIndexName:   ResourceAttributeSettings{Enabled: false},
					ElasticsearchNodeName:    ResourceAttributeSettings{Enabled: false},
					ElasticsearchNodeVersion: ResourceAttributeSettings{Enabled: false},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadMetricsBuilderConfig(t, tt.name)
			if diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(MetricSettings{}, ResourceAttributeSettings{})); diff != "" {
				t.Errorf("Config mismatch (-expected +actual):\n%s", diff)
			}
		})
	}
}

func loadResourceAttributesSettings(t *testing.T, name string) ResourceAttributesSettings {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	sub, err = sub.Sub("resource_attributes")
	require.NoError(t, err)
	cfg := DefaultResourceAttributesSettings()
	require.NoError(t, component.UnmarshalConfig(sub, &cfg))
	return cfg
}

func loadMetricsBuilderConfig(t *testing.T, name string) MetricsBuilderConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	cfg := DefaultMetricsBuilderConfig()
	require.NoError(t, component.UnmarshalConfig(sub, &cfg))
	return cfg
}
