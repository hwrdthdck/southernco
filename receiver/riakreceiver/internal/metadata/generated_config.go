// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for riakreceiver metrics.
type MetricsSettings struct {
	RiakMemoryLimit              MetricSettings `mapstructure:"riak.memory.limit"`
	RiakNodeOperationCount       MetricSettings `mapstructure:"riak.node.operation.count"`
	RiakNodeOperationTimeMean    MetricSettings `mapstructure:"riak.node.operation.time.mean"`
	RiakNodeReadRepairCount      MetricSettings `mapstructure:"riak.node.read_repair.count"`
	RiakVnodeIndexOperationCount MetricSettings `mapstructure:"riak.vnode.index.operation.count"`
	RiakVnodeOperationCount      MetricSettings `mapstructure:"riak.vnode.operation.count"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		RiakMemoryLimit: MetricSettings{
			Enabled: true,
		},
		RiakNodeOperationCount: MetricSettings{
			Enabled: true,
		},
		RiakNodeOperationTimeMean: MetricSettings{
			Enabled: true,
		},
		RiakNodeReadRepairCount: MetricSettings{
			Enabled: true,
		},
		RiakVnodeIndexOperationCount: MetricSettings{
			Enabled: true,
		},
		RiakVnodeOperationCount: MetricSettings{
			Enabled: true,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for riakreceiver resource attributes.
type ResourceAttributesSettings struct {
	RiakNodeName ResourceAttributeSettings `mapstructure:"riak.node.name"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		RiakNodeName: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for riakreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
