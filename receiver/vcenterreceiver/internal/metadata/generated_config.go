// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for vcenterreceiver metrics.
type MetricsSettings struct {
	VcenterClusterCPUEffective      MetricSettings `mapstructure:"vcenter.cluster.cpu.effective"`
	VcenterClusterCPULimit          MetricSettings `mapstructure:"vcenter.cluster.cpu.limit"`
	VcenterClusterHostCount         MetricSettings `mapstructure:"vcenter.cluster.host.count"`
	VcenterClusterMemoryEffective   MetricSettings `mapstructure:"vcenter.cluster.memory.effective"`
	VcenterClusterMemoryLimit       MetricSettings `mapstructure:"vcenter.cluster.memory.limit"`
	VcenterClusterMemoryUsed        MetricSettings `mapstructure:"vcenter.cluster.memory.used"`
	VcenterClusterVMCount           MetricSettings `mapstructure:"vcenter.cluster.vm.count"`
	VcenterDatastoreDiskUsage       MetricSettings `mapstructure:"vcenter.datastore.disk.usage"`
	VcenterDatastoreDiskUtilization MetricSettings `mapstructure:"vcenter.datastore.disk.utilization"`
	VcenterHostCPUUsage             MetricSettings `mapstructure:"vcenter.host.cpu.usage"`
	VcenterHostCPUUtilization       MetricSettings `mapstructure:"vcenter.host.cpu.utilization"`
	VcenterHostDiskLatencyAvg       MetricSettings `mapstructure:"vcenter.host.disk.latency.avg"`
	VcenterHostDiskLatencyMax       MetricSettings `mapstructure:"vcenter.host.disk.latency.max"`
	VcenterHostDiskThroughput       MetricSettings `mapstructure:"vcenter.host.disk.throughput"`
	VcenterHostMemoryUsage          MetricSettings `mapstructure:"vcenter.host.memory.usage"`
	VcenterHostMemoryUtilization    MetricSettings `mapstructure:"vcenter.host.memory.utilization"`
	VcenterHostNetworkPacketCount   MetricSettings `mapstructure:"vcenter.host.network.packet.count"`
	VcenterHostNetworkPacketErrors  MetricSettings `mapstructure:"vcenter.host.network.packet.errors"`
	VcenterHostNetworkThroughput    MetricSettings `mapstructure:"vcenter.host.network.throughput"`
	VcenterHostNetworkUsage         MetricSettings `mapstructure:"vcenter.host.network.usage"`
	VcenterResourcePoolCPUShares    MetricSettings `mapstructure:"vcenter.resource_pool.cpu.shares"`
	VcenterResourcePoolCPUUsage     MetricSettings `mapstructure:"vcenter.resource_pool.cpu.usage"`
	VcenterResourcePoolMemoryShares MetricSettings `mapstructure:"vcenter.resource_pool.memory.shares"`
	VcenterResourcePoolMemoryUsage  MetricSettings `mapstructure:"vcenter.resource_pool.memory.usage"`
	VcenterVMCPUUsage               MetricSettings `mapstructure:"vcenter.vm.cpu.usage"`
	VcenterVMCPUUtilization         MetricSettings `mapstructure:"vcenter.vm.cpu.utilization"`
	VcenterVMDiskLatencyAvg         MetricSettings `mapstructure:"vcenter.vm.disk.latency.avg"`
	VcenterVMDiskLatencyMax         MetricSettings `mapstructure:"vcenter.vm.disk.latency.max"`
	VcenterVMDiskThroughput         MetricSettings `mapstructure:"vcenter.vm.disk.throughput"`
	VcenterVMDiskUsage              MetricSettings `mapstructure:"vcenter.vm.disk.usage"`
	VcenterVMDiskUtilization        MetricSettings `mapstructure:"vcenter.vm.disk.utilization"`
	VcenterVMMemoryBallooned        MetricSettings `mapstructure:"vcenter.vm.memory.ballooned"`
	VcenterVMMemorySwapped          MetricSettings `mapstructure:"vcenter.vm.memory.swapped"`
	VcenterVMMemorySwappedSsd       MetricSettings `mapstructure:"vcenter.vm.memory.swapped_ssd"`
	VcenterVMMemoryUsage            MetricSettings `mapstructure:"vcenter.vm.memory.usage"`
	VcenterVMNetworkPacketCount     MetricSettings `mapstructure:"vcenter.vm.network.packet.count"`
	VcenterVMNetworkThroughput      MetricSettings `mapstructure:"vcenter.vm.network.throughput"`
	VcenterVMNetworkUsage           MetricSettings `mapstructure:"vcenter.vm.network.usage"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		VcenterClusterCPUEffective: MetricSettings{
			Enabled: true,
		},
		VcenterClusterCPULimit: MetricSettings{
			Enabled: true,
		},
		VcenterClusterHostCount: MetricSettings{
			Enabled: true,
		},
		VcenterClusterMemoryEffective: MetricSettings{
			Enabled: true,
		},
		VcenterClusterMemoryLimit: MetricSettings{
			Enabled: true,
		},
		VcenterClusterMemoryUsed: MetricSettings{
			Enabled: true,
		},
		VcenterClusterVMCount: MetricSettings{
			Enabled: true,
		},
		VcenterDatastoreDiskUsage: MetricSettings{
			Enabled: true,
		},
		VcenterDatastoreDiskUtilization: MetricSettings{
			Enabled: true,
		},
		VcenterHostCPUUsage: MetricSettings{
			Enabled: true,
		},
		VcenterHostCPUUtilization: MetricSettings{
			Enabled: true,
		},
		VcenterHostDiskLatencyAvg: MetricSettings{
			Enabled: true,
		},
		VcenterHostDiskLatencyMax: MetricSettings{
			Enabled: true,
		},
		VcenterHostDiskThroughput: MetricSettings{
			Enabled: true,
		},
		VcenterHostMemoryUsage: MetricSettings{
			Enabled: true,
		},
		VcenterHostMemoryUtilization: MetricSettings{
			Enabled: true,
		},
		VcenterHostNetworkPacketCount: MetricSettings{
			Enabled: true,
		},
		VcenterHostNetworkPacketErrors: MetricSettings{
			Enabled: true,
		},
		VcenterHostNetworkThroughput: MetricSettings{
			Enabled: true,
		},
		VcenterHostNetworkUsage: MetricSettings{
			Enabled: true,
		},
		VcenterResourcePoolCPUShares: MetricSettings{
			Enabled: true,
		},
		VcenterResourcePoolCPUUsage: MetricSettings{
			Enabled: true,
		},
		VcenterResourcePoolMemoryShares: MetricSettings{
			Enabled: true,
		},
		VcenterResourcePoolMemoryUsage: MetricSettings{
			Enabled: true,
		},
		VcenterVMCPUUsage: MetricSettings{
			Enabled: true,
		},
		VcenterVMCPUUtilization: MetricSettings{
			Enabled: true,
		},
		VcenterVMDiskLatencyAvg: MetricSettings{
			Enabled: true,
		},
		VcenterVMDiskLatencyMax: MetricSettings{
			Enabled: true,
		},
		VcenterVMDiskThroughput: MetricSettings{
			Enabled: true,
		},
		VcenterVMDiskUsage: MetricSettings{
			Enabled: true,
		},
		VcenterVMDiskUtilization: MetricSettings{
			Enabled: true,
		},
		VcenterVMMemoryBallooned: MetricSettings{
			Enabled: true,
		},
		VcenterVMMemorySwapped: MetricSettings{
			Enabled: true,
		},
		VcenterVMMemorySwappedSsd: MetricSettings{
			Enabled: true,
		},
		VcenterVMMemoryUsage: MetricSettings{
			Enabled: true,
		},
		VcenterVMNetworkPacketCount: MetricSettings{
			Enabled: true,
		},
		VcenterVMNetworkThroughput: MetricSettings{
			Enabled: true,
		},
		VcenterVMNetworkUsage: MetricSettings{
			Enabled: true,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for vcenterreceiver resource attributes.
type ResourceAttributesSettings struct {
	VcenterClusterName      ResourceAttributeSettings `mapstructure:"vcenter.cluster.name"`
	VcenterDatastoreName    ResourceAttributeSettings `mapstructure:"vcenter.datastore.name"`
	VcenterHostName         ResourceAttributeSettings `mapstructure:"vcenter.host.name"`
	VcenterResourcePoolName ResourceAttributeSettings `mapstructure:"vcenter.resource_pool.name"`
	VcenterVMID             ResourceAttributeSettings `mapstructure:"vcenter.vm.id"`
	VcenterVMName           ResourceAttributeSettings `mapstructure:"vcenter.vm.name"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		VcenterClusterName: ResourceAttributeSettings{
			Enabled: true,
		},
		VcenterDatastoreName: ResourceAttributeSettings{
			Enabled: true,
		},
		VcenterHostName: ResourceAttributeSettings{
			Enabled: true,
		},
		VcenterResourcePoolName: ResourceAttributeSettings{
			Enabled: true,
		},
		VcenterVMID: ResourceAttributeSettings{
			Enabled: true,
		},
		VcenterVMName: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for vcenterreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
