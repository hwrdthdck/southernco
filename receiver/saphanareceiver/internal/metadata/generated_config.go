// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for saphanareceiver metrics.
type MetricsSettings struct {
	SaphanaAlertCount                       MetricSettings `mapstructure:"saphana.alert.count"`
	SaphanaBackupLatest                     MetricSettings `mapstructure:"saphana.backup.latest"`
	SaphanaColumnMemoryUsed                 MetricSettings `mapstructure:"saphana.column.memory.used"`
	SaphanaComponentMemoryUsed              MetricSettings `mapstructure:"saphana.component.memory.used"`
	SaphanaConnectionCount                  MetricSettings `mapstructure:"saphana.connection.count"`
	SaphanaCPUUsed                          MetricSettings `mapstructure:"saphana.cpu.used"`
	SaphanaDiskSizeCurrent                  MetricSettings `mapstructure:"saphana.disk.size.current"`
	SaphanaHostMemoryCurrent                MetricSettings `mapstructure:"saphana.host.memory.current"`
	SaphanaHostSwapCurrent                  MetricSettings `mapstructure:"saphana.host.swap.current"`
	SaphanaInstanceCodeSize                 MetricSettings `mapstructure:"saphana.instance.code_size"`
	SaphanaInstanceMemoryCurrent            MetricSettings `mapstructure:"saphana.instance.memory.current"`
	SaphanaInstanceMemorySharedAllocated    MetricSettings `mapstructure:"saphana.instance.memory.shared.allocated"`
	SaphanaInstanceMemoryUsedPeak           MetricSettings `mapstructure:"saphana.instance.memory.used.peak"`
	SaphanaLicenseExpirationTime            MetricSettings `mapstructure:"saphana.license.expiration.time"`
	SaphanaLicenseLimit                     MetricSettings `mapstructure:"saphana.license.limit"`
	SaphanaLicensePeak                      MetricSettings `mapstructure:"saphana.license.peak"`
	SaphanaNetworkRequestAverageTime        MetricSettings `mapstructure:"saphana.network.request.average_time"`
	SaphanaNetworkRequestCount              MetricSettings `mapstructure:"saphana.network.request.count"`
	SaphanaNetworkRequestFinishedCount      MetricSettings `mapstructure:"saphana.network.request.finished.count"`
	SaphanaReplicationAverageTime           MetricSettings `mapstructure:"saphana.replication.average_time"`
	SaphanaReplicationBacklogSize           MetricSettings `mapstructure:"saphana.replication.backlog.size"`
	SaphanaReplicationBacklogTime           MetricSettings `mapstructure:"saphana.replication.backlog.time"`
	SaphanaRowStoreMemoryUsed               MetricSettings `mapstructure:"saphana.row_store.memory.used"`
	SaphanaSchemaMemoryUsedCurrent          MetricSettings `mapstructure:"saphana.schema.memory.used.current"`
	SaphanaSchemaMemoryUsedMax              MetricSettings `mapstructure:"saphana.schema.memory.used.max"`
	SaphanaSchemaOperationCount             MetricSettings `mapstructure:"saphana.schema.operation.count"`
	SaphanaSchemaRecordCompressedCount      MetricSettings `mapstructure:"saphana.schema.record.compressed.count"`
	SaphanaSchemaRecordCount                MetricSettings `mapstructure:"saphana.schema.record.count"`
	SaphanaServiceCodeSize                  MetricSettings `mapstructure:"saphana.service.code_size"`
	SaphanaServiceCount                     MetricSettings `mapstructure:"saphana.service.count"`
	SaphanaServiceMemoryCompactorsAllocated MetricSettings `mapstructure:"saphana.service.memory.compactors.allocated"`
	SaphanaServiceMemoryCompactorsFreeable  MetricSettings `mapstructure:"saphana.service.memory.compactors.freeable"`
	SaphanaServiceMemoryEffectiveLimit      MetricSettings `mapstructure:"saphana.service.memory.effective_limit"`
	SaphanaServiceMemoryHeapCurrent         MetricSettings `mapstructure:"saphana.service.memory.heap.current"`
	SaphanaServiceMemoryLimit               MetricSettings `mapstructure:"saphana.service.memory.limit"`
	SaphanaServiceMemorySharedCurrent       MetricSettings `mapstructure:"saphana.service.memory.shared.current"`
	SaphanaServiceMemoryUsed                MetricSettings `mapstructure:"saphana.service.memory.used"`
	SaphanaServiceStackSize                 MetricSettings `mapstructure:"saphana.service.stack_size"`
	SaphanaServiceThreadCount               MetricSettings `mapstructure:"saphana.service.thread.count"`
	SaphanaTransactionBlocked               MetricSettings `mapstructure:"saphana.transaction.blocked"`
	SaphanaTransactionCount                 MetricSettings `mapstructure:"saphana.transaction.count"`
	SaphanaUptime                           MetricSettings `mapstructure:"saphana.uptime"`
	SaphanaVolumeOperationCount             MetricSettings `mapstructure:"saphana.volume.operation.count"`
	SaphanaVolumeOperationSize              MetricSettings `mapstructure:"saphana.volume.operation.size"`
	SaphanaVolumeOperationTime              MetricSettings `mapstructure:"saphana.volume.operation.time"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		SaphanaAlertCount: MetricSettings{
			Enabled: true,
		},
		SaphanaBackupLatest: MetricSettings{
			Enabled: true,
		},
		SaphanaColumnMemoryUsed: MetricSettings{
			Enabled: true,
		},
		SaphanaComponentMemoryUsed: MetricSettings{
			Enabled: true,
		},
		SaphanaConnectionCount: MetricSettings{
			Enabled: true,
		},
		SaphanaCPUUsed: MetricSettings{
			Enabled: true,
		},
		SaphanaDiskSizeCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaHostMemoryCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaHostSwapCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaInstanceCodeSize: MetricSettings{
			Enabled: true,
		},
		SaphanaInstanceMemoryCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaInstanceMemorySharedAllocated: MetricSettings{
			Enabled: true,
		},
		SaphanaInstanceMemoryUsedPeak: MetricSettings{
			Enabled: true,
		},
		SaphanaLicenseExpirationTime: MetricSettings{
			Enabled: true,
		},
		SaphanaLicenseLimit: MetricSettings{
			Enabled: true,
		},
		SaphanaLicensePeak: MetricSettings{
			Enabled: true,
		},
		SaphanaNetworkRequestAverageTime: MetricSettings{
			Enabled: true,
		},
		SaphanaNetworkRequestCount: MetricSettings{
			Enabled: true,
		},
		SaphanaNetworkRequestFinishedCount: MetricSettings{
			Enabled: true,
		},
		SaphanaReplicationAverageTime: MetricSettings{
			Enabled: true,
		},
		SaphanaReplicationBacklogSize: MetricSettings{
			Enabled: true,
		},
		SaphanaReplicationBacklogTime: MetricSettings{
			Enabled: true,
		},
		SaphanaRowStoreMemoryUsed: MetricSettings{
			Enabled: true,
		},
		SaphanaSchemaMemoryUsedCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaSchemaMemoryUsedMax: MetricSettings{
			Enabled: true,
		},
		SaphanaSchemaOperationCount: MetricSettings{
			Enabled: true,
		},
		SaphanaSchemaRecordCompressedCount: MetricSettings{
			Enabled: true,
		},
		SaphanaSchemaRecordCount: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceCodeSize: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceCount: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryCompactorsAllocated: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryCompactorsFreeable: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryEffectiveLimit: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryHeapCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryLimit: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemorySharedCurrent: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceMemoryUsed: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceStackSize: MetricSettings{
			Enabled: true,
		},
		SaphanaServiceThreadCount: MetricSettings{
			Enabled: true,
		},
		SaphanaTransactionBlocked: MetricSettings{
			Enabled: true,
		},
		SaphanaTransactionCount: MetricSettings{
			Enabled: true,
		},
		SaphanaUptime: MetricSettings{
			Enabled: true,
		},
		SaphanaVolumeOperationCount: MetricSettings{
			Enabled: true,
		},
		SaphanaVolumeOperationSize: MetricSettings{
			Enabled: true,
		},
		SaphanaVolumeOperationTime: MetricSettings{
			Enabled: true,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for saphanareceiver resource attributes.
type ResourceAttributesSettings struct {
	DbSystem    ResourceAttributeSettings `mapstructure:"db.system"`
	SaphanaHost ResourceAttributeSettings `mapstructure:"saphana.host"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		DbSystem: ResourceAttributeSettings{
			Enabled: true,
		},
		SaphanaHost: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for saphanareceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
