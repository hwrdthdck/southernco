// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for hostmetricsreceiver/process metrics.
type MetricsSettings struct {
	ProcessContextSwitches     MetricSettings `mapstructure:"process.context_switches"`
	ProcessCPUTime             MetricSettings `mapstructure:"process.cpu.time"`
	ProcessCPUUtilization      MetricSettings `mapstructure:"process.cpu.utilization"`
	ProcessDiskIo              MetricSettings `mapstructure:"process.disk.io"`
	ProcessDiskOperations      MetricSettings `mapstructure:"process.disk.operations"`
	ProcessMemoryUsage         MetricSettings `mapstructure:"process.memory.usage"`
	ProcessMemoryUtilization   MetricSettings `mapstructure:"process.memory.utilization"`
	ProcessMemoryVirtual       MetricSettings `mapstructure:"process.memory.virtual"`
	ProcessOpenFileDescriptors MetricSettings `mapstructure:"process.open_file_descriptors"`
	ProcessPagingFaults        MetricSettings `mapstructure:"process.paging.faults"`
	ProcessSignalsPending      MetricSettings `mapstructure:"process.signals_pending"`
	ProcessThreads             MetricSettings `mapstructure:"process.threads"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		ProcessContextSwitches: MetricSettings{
			Enabled: false,
		},
		ProcessCPUTime: MetricSettings{
			Enabled: true,
		},
		ProcessCPUUtilization: MetricSettings{
			Enabled: false,
		},
		ProcessDiskIo: MetricSettings{
			Enabled: true,
		},
		ProcessDiskOperations: MetricSettings{
			Enabled: false,
		},
		ProcessMemoryUsage: MetricSettings{
			Enabled: true,
		},
		ProcessMemoryUtilization: MetricSettings{
			Enabled: false,
		},
		ProcessMemoryVirtual: MetricSettings{
			Enabled: true,
		},
		ProcessOpenFileDescriptors: MetricSettings{
			Enabled: false,
		},
		ProcessPagingFaults: MetricSettings{
			Enabled: false,
		},
		ProcessSignalsPending: MetricSettings{
			Enabled: false,
		},
		ProcessThreads: MetricSettings{
			Enabled: false,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for hostmetricsreceiver/process resource attributes.
type ResourceAttributesSettings struct {
	ProcessCommand        ResourceAttributeSettings `mapstructure:"process.command"`
	ProcessCommandLine    ResourceAttributeSettings `mapstructure:"process.command_line"`
	ProcessExecutableName ResourceAttributeSettings `mapstructure:"process.executable.name"`
	ProcessExecutablePath ResourceAttributeSettings `mapstructure:"process.executable.path"`
	ProcessOwner          ResourceAttributeSettings `mapstructure:"process.owner"`
	ProcessParentPid      ResourceAttributeSettings `mapstructure:"process.parent_pid"`
	ProcessPid            ResourceAttributeSettings `mapstructure:"process.pid"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		ProcessCommand: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessCommandLine: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessExecutableName: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessExecutablePath: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessOwner: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessParentPid: ResourceAttributeSettings{
			Enabled: true,
		},
		ProcessPid: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for hostmetricsreceiver/process metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
