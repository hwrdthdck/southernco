// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for hostmetricsreceiver/network metrics.
type MetricsSettings struct {
	SystemNetworkConnections    MetricSettings `mapstructure:"system.network.connections"`
	SystemNetworkConntrackCount MetricSettings `mapstructure:"system.network.conntrack.count"`
	SystemNetworkConntrackMax   MetricSettings `mapstructure:"system.network.conntrack.max"`
	SystemNetworkDropped        MetricSettings `mapstructure:"system.network.dropped"`
	SystemNetworkErrors         MetricSettings `mapstructure:"system.network.errors"`
	SystemNetworkIo             MetricSettings `mapstructure:"system.network.io"`
	SystemNetworkPackets        MetricSettings `mapstructure:"system.network.packets"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		SystemNetworkConnections: MetricSettings{
			Enabled: true,
		},
		SystemNetworkConntrackCount: MetricSettings{
			Enabled: false,
		},
		SystemNetworkConntrackMax: MetricSettings{
			Enabled: false,
		},
		SystemNetworkDropped: MetricSettings{
			Enabled: true,
		},
		SystemNetworkErrors: MetricSettings{
			Enabled: true,
		},
		SystemNetworkIo: MetricSettings{
			Enabled: true,
		},
		SystemNetworkPackets: MetricSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for hostmetricsreceiver/network metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsSettings `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsSettings(),
	}
}
