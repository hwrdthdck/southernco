// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for postgresqlreceiver metrics.
type MetricsSettings struct {
	PostgresqlBackends                 MetricSettings `mapstructure:"postgresql.backends"`
	PostgresqlBgwriterBuffersAllocated MetricSettings `mapstructure:"postgresql.bgwriter.buffers.allocated"`
	PostgresqlBgwriterBuffersWrites    MetricSettings `mapstructure:"postgresql.bgwriter.buffers.writes"`
	PostgresqlBgwriterCheckpointCount  MetricSettings `mapstructure:"postgresql.bgwriter.checkpoint.count"`
	PostgresqlBgwriterDuration         MetricSettings `mapstructure:"postgresql.bgwriter.duration"`
	PostgresqlBgwriterMaxwritten       MetricSettings `mapstructure:"postgresql.bgwriter.maxwritten"`
	PostgresqlBlocksRead               MetricSettings `mapstructure:"postgresql.blocks_read"`
	PostgresqlCommits                  MetricSettings `mapstructure:"postgresql.commits"`
	PostgresqlConnectionMax            MetricSettings `mapstructure:"postgresql.connection.max"`
	PostgresqlDatabaseCount            MetricSettings `mapstructure:"postgresql.database.count"`
	PostgresqlDbSize                   MetricSettings `mapstructure:"postgresql.db_size"`
	PostgresqlIndexScans               MetricSettings `mapstructure:"postgresql.index.scans"`
	PostgresqlIndexSize                MetricSettings `mapstructure:"postgresql.index.size"`
	PostgresqlOperations               MetricSettings `mapstructure:"postgresql.operations"`
	PostgresqlReplicationDataDelay     MetricSettings `mapstructure:"postgresql.replication.data_delay"`
	PostgresqlRollbacks                MetricSettings `mapstructure:"postgresql.rollbacks"`
	PostgresqlRows                     MetricSettings `mapstructure:"postgresql.rows"`
	PostgresqlTableCount               MetricSettings `mapstructure:"postgresql.table.count"`
	PostgresqlTableSize                MetricSettings `mapstructure:"postgresql.table.size"`
	PostgresqlTableVacuumCount         MetricSettings `mapstructure:"postgresql.table.vacuum.count"`
	PostgresqlWalAge                   MetricSettings `mapstructure:"postgresql.wal.age"`
	PostgresqlWalLag                   MetricSettings `mapstructure:"postgresql.wal.lag"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		PostgresqlBackends: MetricSettings{
			Enabled: true,
		},
		PostgresqlBgwriterBuffersAllocated: MetricSettings{
			Enabled: true,
		},
		PostgresqlBgwriterBuffersWrites: MetricSettings{
			Enabled: true,
		},
		PostgresqlBgwriterCheckpointCount: MetricSettings{
			Enabled: true,
		},
		PostgresqlBgwriterDuration: MetricSettings{
			Enabled: true,
		},
		PostgresqlBgwriterMaxwritten: MetricSettings{
			Enabled: true,
		},
		PostgresqlBlocksRead: MetricSettings{
			Enabled: true,
		},
		PostgresqlCommits: MetricSettings{
			Enabled: true,
		},
		PostgresqlConnectionMax: MetricSettings{
			Enabled: true,
		},
		PostgresqlDatabaseCount: MetricSettings{
			Enabled: true,
		},
		PostgresqlDbSize: MetricSettings{
			Enabled: true,
		},
		PostgresqlIndexScans: MetricSettings{
			Enabled: true,
		},
		PostgresqlIndexSize: MetricSettings{
			Enabled: true,
		},
		PostgresqlOperations: MetricSettings{
			Enabled: true,
		},
		PostgresqlReplicationDataDelay: MetricSettings{
			Enabled: true,
		},
		PostgresqlRollbacks: MetricSettings{
			Enabled: true,
		},
		PostgresqlRows: MetricSettings{
			Enabled: true,
		},
		PostgresqlTableCount: MetricSettings{
			Enabled: true,
		},
		PostgresqlTableSize: MetricSettings{
			Enabled: true,
		},
		PostgresqlTableVacuumCount: MetricSettings{
			Enabled: true,
		},
		PostgresqlWalAge: MetricSettings{
			Enabled: true,
		},
		PostgresqlWalLag: MetricSettings{
			Enabled: true,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for postgresqlreceiver resource attributes.
type ResourceAttributesSettings struct {
	PostgresqlDatabaseName ResourceAttributeSettings `mapstructure:"postgresql.database.name"`
	PostgresqlIndexName    ResourceAttributeSettings `mapstructure:"postgresql.index.name"`
	PostgresqlTableName    ResourceAttributeSettings `mapstructure:"postgresql.table.name"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		PostgresqlDatabaseName: ResourceAttributeSettings{
			Enabled: true,
		},
		PostgresqlIndexName: ResourceAttributeSettings{
			Enabled: true,
		},
		PostgresqlTableName: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for postgresqlreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
