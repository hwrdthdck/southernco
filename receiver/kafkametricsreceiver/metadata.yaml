type: kafkametrics

status:
  class: receiver
  stability:
    beta: [metrics]
  distributions: [contrib, splunk, sumo]
  codeowners:
    active: [dmitryax]

attributes:
  topic:
    description: The ID (integer) of a topic
    type: string
  partition:
    description: The number (integer) of the partition
    type: int
  group:
    description: The ID (string) of a consumer group
    type: string
  broker:
    description: The ID (integer) of a broker
    type: int

metrics:
  #  brokers scraper
  kafka.brokers:
    enabled: true
    description: "[DEPRECATED] Number of brokers in the cluster."
    unit: "{brokers}"
    gauge:
      value_type: int
    warnings:
      if_enabled: The metric is deprecated and will be removed. Use `kafka.brokers.count`
  kafka.brokers.count:
    enabled: false
    description: Number of brokers in the cluster.
    unit: "{brokers}"
    sum:
      monotonic: false
      value_type: int
      aggregation: cumulative
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.consumer_fetch_rate:
    enabled: false
    description: Average consumer fetch Rate
    unit: "{fetches}/s"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.incoming_byte_rate:
    enabled: false
    description: Average tncoming Byte Rate in bytes/second
    unit: 1
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.outgoing_byte_rate:
    enabled: false
    description: Average outgoing Byte Rate in bytes/second.
    unit: 1
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.request_latency:
    enabled: false
    description: Average request latency in ms
    unit: "ms"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.response_rate:
    enabled: false
    description: Average response rate per second
    unit: "{response}/s"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.response_size:
    enabled: false
    description: Average response size in bytes
    unit: "By"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.request_rate:
    enabled: false
    description: Average request rate per second.
    unit: "{requests}/s"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.request_size:
    enabled: false
    description: Average request size in bytes
    unit: "By"
    gauge:
      value_type: double
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.brokers.requests_in_flight:
    enabled: false
    description: Requests in flight
    unit: "{requests}"
    gauge:
      value_type: int
    attributes: [broker]
    warnings:
      if_enabled_not_set: This metric will be enabled by default in the next versions.
  kafka.topic.partitions:
    enabled: true
    description: Number of partitions in topic.
    unit: "{partitions}"
    sum:
      monotonic: false
      value_type: int
      aggregation: cumulative
    attributes: [topic]
  kafka.partition.current_offset:
    enabled: true
    description: Current offset of partition of topic.
    unit: 1
    gauge:
      value_type: int
    attributes: [topic, partition]
  kafka.partition.oldest_offset:
    enabled: true
    description: Oldest offset of partition of topic
    unit: 1
    gauge:
      value_type: int
    attributes: [topic, partition]
  kafka.partition.replicas:
    enabled: true
    description: Number of replicas for partition of topic
    unit: "{replicas}"
    sum:
      monotonic: false
      value_type: int
      aggregation: cumulative
    attributes: [topic, partition]
  kafka.partition.replicas_in_sync:
    enabled: true
    description: Number of synchronized replicas of partition
    unit: "{replicas}"
    sum:
      monotonic: false
      value_type: int
      aggregation: cumulative
    attributes: [topic, partition]
  #  consumers scraper
  kafka.consumer_group.members:
    enabled: true
    description: Count of members in the consumer group
    unit: "{members}"
    sum:
      monotonic: false
      value_type: int
      aggregation: cumulative
    attributes: [group]
  kafka.consumer_group.offset:
    enabled: true
    description: Current offset of the consumer group at partition of topic
    unit: 1
    gauge:
      value_type: int
    attributes: [group, topic, partition]
  kafka.consumer_group.offset_sum:
    enabled: true
    description: Sum of consumer group offset across partitions of topic
    unit: 1
    gauge:
      value_type: int
    attributes: [group, topic]
  kafka.consumer_group.lag:
    enabled: true
    description: Current approximate lag of consumer group at partition of topic
    unit: 1
    gauge:
      value_type: int
    attributes: [group, topic, partition]
  kafka.consumer_group.lag_sum:
    enabled: true
    description: Current approximate sum of consumer group lag across all partitions of topic
    unit: 1
    gauge:
      value_type: int
    attributes: [group, topic]