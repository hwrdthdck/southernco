// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for expvarreceiver metrics.
type MetricsSettings struct {
	ProcessRuntimeMemstatsBuckHashSys   MetricSettings `mapstructure:"process.runtime.memstats.buck_hash_sys"`
	ProcessRuntimeMemstatsFrees         MetricSettings `mapstructure:"process.runtime.memstats.frees"`
	ProcessRuntimeMemstatsGcCPUFraction MetricSettings `mapstructure:"process.runtime.memstats.gc_cpu_fraction"`
	ProcessRuntimeMemstatsGcSys         MetricSettings `mapstructure:"process.runtime.memstats.gc_sys"`
	ProcessRuntimeMemstatsHeapAlloc     MetricSettings `mapstructure:"process.runtime.memstats.heap_alloc"`
	ProcessRuntimeMemstatsHeapIdle      MetricSettings `mapstructure:"process.runtime.memstats.heap_idle"`
	ProcessRuntimeMemstatsHeapInuse     MetricSettings `mapstructure:"process.runtime.memstats.heap_inuse"`
	ProcessRuntimeMemstatsHeapObjects   MetricSettings `mapstructure:"process.runtime.memstats.heap_objects"`
	ProcessRuntimeMemstatsHeapReleased  MetricSettings `mapstructure:"process.runtime.memstats.heap_released"`
	ProcessRuntimeMemstatsHeapSys       MetricSettings `mapstructure:"process.runtime.memstats.heap_sys"`
	ProcessRuntimeMemstatsLastPause     MetricSettings `mapstructure:"process.runtime.memstats.last_pause"`
	ProcessRuntimeMemstatsLookups       MetricSettings `mapstructure:"process.runtime.memstats.lookups"`
	ProcessRuntimeMemstatsMallocs       MetricSettings `mapstructure:"process.runtime.memstats.mallocs"`
	ProcessRuntimeMemstatsMcacheInuse   MetricSettings `mapstructure:"process.runtime.memstats.mcache_inuse"`
	ProcessRuntimeMemstatsMcacheSys     MetricSettings `mapstructure:"process.runtime.memstats.mcache_sys"`
	ProcessRuntimeMemstatsMspanInuse    MetricSettings `mapstructure:"process.runtime.memstats.mspan_inuse"`
	ProcessRuntimeMemstatsMspanSys      MetricSettings `mapstructure:"process.runtime.memstats.mspan_sys"`
	ProcessRuntimeMemstatsNextGc        MetricSettings `mapstructure:"process.runtime.memstats.next_gc"`
	ProcessRuntimeMemstatsNumForcedGc   MetricSettings `mapstructure:"process.runtime.memstats.num_forced_gc"`
	ProcessRuntimeMemstatsNumGc         MetricSettings `mapstructure:"process.runtime.memstats.num_gc"`
	ProcessRuntimeMemstatsOtherSys      MetricSettings `mapstructure:"process.runtime.memstats.other_sys"`
	ProcessRuntimeMemstatsPauseTotal    MetricSettings `mapstructure:"process.runtime.memstats.pause_total"`
	ProcessRuntimeMemstatsStackInuse    MetricSettings `mapstructure:"process.runtime.memstats.stack_inuse"`
	ProcessRuntimeMemstatsStackSys      MetricSettings `mapstructure:"process.runtime.memstats.stack_sys"`
	ProcessRuntimeMemstatsSys           MetricSettings `mapstructure:"process.runtime.memstats.sys"`
	ProcessRuntimeMemstatsTotalAlloc    MetricSettings `mapstructure:"process.runtime.memstats.total_alloc"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		ProcessRuntimeMemstatsBuckHashSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsFrees: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsGcCPUFraction: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsGcSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapAlloc: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapIdle: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapInuse: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapObjects: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapReleased: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsHeapSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsLastPause: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsLookups: MetricSettings{
			Enabled: false,
		},
		ProcessRuntimeMemstatsMallocs: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsMcacheInuse: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsMcacheSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsMspanInuse: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsMspanSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsNextGc: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsNumForcedGc: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsNumGc: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsOtherSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsPauseTotal: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsStackInuse: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsStackSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsSys: MetricSettings{
			Enabled: true,
		},
		ProcessRuntimeMemstatsTotalAlloc: MetricSettings{
			Enabled: false,
		},
	}
}

// MetricsBuilderConfig is a configuration for expvarreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsSettings `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsSettings(),
	}
}
