// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/confmap/confmaptest"
)

func TestMetricsBuilderConfig(t *testing.T) {
	tests := []struct {
		name string
		want MetricsBuilderConfig
	}{
		{
			name: "default",
			want: DefaultMetricsBuilderConfig(),
		},
		{
			name: "all_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					SparkBlockManagerDiskUsage:                   MetricConfig{Enabled: true},
					SparkBlockManagerMemoryRemaining:             MetricConfig{Enabled: true},
					SparkBlockManagerMemoryUsed:                  MetricConfig{Enabled: true},
					SparkCodeGeneratorCompilationAverageTime:     MetricConfig{Enabled: true},
					SparkCodeGeneratorCompilationCount:           MetricConfig{Enabled: true},
					SparkCodeGeneratorGeneratedClassAverageSize:  MetricConfig{Enabled: true},
					SparkCodeGeneratorGeneratedClassCount:        MetricConfig{Enabled: true},
					SparkCodeGeneratorGeneratedMethodAverageSize: MetricConfig{Enabled: true},
					SparkCodeGeneratorGeneratedMethodCount:       MetricConfig{Enabled: true},
					SparkCodeGeneratorSourceCodeAverageSize:      MetricConfig{Enabled: true},
					SparkCodeGeneratorSourceCodeOperations:       MetricConfig{Enabled: true},
					SparkDagSchedulerJobsActive:                  MetricConfig{Enabled: true},
					SparkDagSchedulerJobsCount:                   MetricConfig{Enabled: true},
					SparkDagSchedulerStages:                      MetricConfig{Enabled: true},
					SparkDagSchedulerStagesFailed:                MetricConfig{Enabled: true},
					SparkExecutorDiskUsage:                       MetricConfig{Enabled: true},
					SparkExecutorGcOperations:                    MetricConfig{Enabled: true},
					SparkExecutorGcTime:                          MetricConfig{Enabled: true},
					SparkExecutorGcTime:                          MetricConfig{Enabled: true},
					SparkExecutorInputSize:                       MetricConfig{Enabled: true},
					SparkExecutorJvmMemory:                       MetricConfig{Enabled: true},
					SparkExecutorMemoryExecution:                 MetricConfig{Enabled: true},
					SparkExecutorMemoryPool:                      MetricConfig{Enabled: true},
					SparkExecutorMemoryStorage:                   MetricConfig{Enabled: true},
					SparkExecutorMemoryUsage:                     MetricConfig{Enabled: true},
					SparkExecutorShuffleIoSize:                   MetricConfig{Enabled: true},
					SparkExecutorStorageMemoryTotal:              MetricConfig{Enabled: true},
					SparkExecutorStorageMemoryUsed:               MetricConfig{Enabled: true},
					SparkExecutorTasksActive:                     MetricConfig{Enabled: true},
					SparkExecutorTasksMax:                        MetricConfig{Enabled: true},
					SparkExecutorTasksResults:                    MetricConfig{Enabled: true},
					SparkExecutorTime:                            MetricConfig{Enabled: true},
					SparkHiveExternalCatalogFileCacheHits:        MetricConfig{Enabled: true},
					SparkHiveExternalCatalogFilesDiscovered:      MetricConfig{Enabled: true},
					SparkHiveExternalCatalogHiveClientCalls:      MetricConfig{Enabled: true},
					SparkHiveExternalCatalogParallelListingJobs:  MetricConfig{Enabled: true},
					SparkHiveExternalCatalogPartitionsFetched:    MetricConfig{Enabled: true},
					SparkJobStagesActive:                         MetricConfig{Enabled: true},
					SparkJobStagesResults:                        MetricConfig{Enabled: true},
					SparkJobTasksActive:                          MetricConfig{Enabled: true},
					SparkJobTasksResults:                         MetricConfig{Enabled: true},
					SparkJvmCPUTime:                              MetricConfig{Enabled: true},
					SparkLiveListenerBusEventsDropped:            MetricConfig{Enabled: true},
					SparkLiveListenerBusEventsPosted:             MetricConfig{Enabled: true},
					SparkLiveListenerBusProcessingTimeAverage:    MetricConfig{Enabled: true},
					SparkLiveListenerBusQueueSize:                MetricConfig{Enabled: true},
					SparkStageDiskSpilled:                        MetricConfig{Enabled: true},
					SparkStageExecutorCPUTime:                    MetricConfig{Enabled: true},
					SparkStageExecutorRunTime:                    MetricConfig{Enabled: true},
					SparkStageIoRecords:                          MetricConfig{Enabled: true},
					SparkStageIoSize:                             MetricConfig{Enabled: true},
					SparkStageJvmGcTime:                          MetricConfig{Enabled: true},
					SparkStageMemoryPeak:                         MetricConfig{Enabled: true},
					SparkStageMemorySpilled:                      MetricConfig{Enabled: true},
					SparkStageShuffleBlocksFetched:               MetricConfig{Enabled: true},
					SparkStageShuffleFetchWaitTime:               MetricConfig{Enabled: true},
					SparkStageShuffleIoDisk:                      MetricConfig{Enabled: true},
					SparkStageShuffleIoRecords:                   MetricConfig{Enabled: true},
					SparkStageShuffleIoSize:                      MetricConfig{Enabled: true},
					SparkStageShuffleWriteTime:                   MetricConfig{Enabled: true},
					SparkStageTaskActive:                         MetricConfig{Enabled: true},
					SparkStageTaskResultSize:                     MetricConfig{Enabled: true},
					SparkStageTaskResults:                        MetricConfig{Enabled: true},
				},
				ResourceAttributes: ResourceAttributesConfig{
					SparkApplicationID:   ResourceAttributeConfig{Enabled: true},
					SparkApplicationName: ResourceAttributeConfig{Enabled: true},
					SparkComponentType:   ResourceAttributeConfig{Enabled: true},
					SparkExecutorID:      ResourceAttributeConfig{Enabled: true},
					SparkJobID:           ResourceAttributeConfig{Enabled: true},
					SparkStageID:         ResourceAttributeConfig{Enabled: true},
				},
			},
		},
		{
			name: "none_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					SparkBlockManagerDiskUsage:                   MetricConfig{Enabled: false},
					SparkBlockManagerMemoryRemaining:             MetricConfig{Enabled: false},
					SparkBlockManagerMemoryUsed:                  MetricConfig{Enabled: false},
					SparkCodeGeneratorCompilationAverageTime:     MetricConfig{Enabled: false},
					SparkCodeGeneratorCompilationCount:           MetricConfig{Enabled: false},
					SparkCodeGeneratorGeneratedClassAverageSize:  MetricConfig{Enabled: false},
					SparkCodeGeneratorGeneratedClassCount:        MetricConfig{Enabled: false},
					SparkCodeGeneratorGeneratedMethodAverageSize: MetricConfig{Enabled: false},
					SparkCodeGeneratorGeneratedMethodCount:       MetricConfig{Enabled: false},
					SparkCodeGeneratorSourceCodeAverageSize:      MetricConfig{Enabled: false},
					SparkCodeGeneratorSourceCodeOperations:       MetricConfig{Enabled: false},
					SparkDagSchedulerJobsActive:                  MetricConfig{Enabled: false},
					SparkDagSchedulerJobsCount:                   MetricConfig{Enabled: false},
					SparkDagSchedulerStages:                      MetricConfig{Enabled: false},
					SparkDagSchedulerStagesFailed:                MetricConfig{Enabled: false},
					SparkExecutorDiskUsage:                       MetricConfig{Enabled: false},
					SparkExecutorGcOperations:                    MetricConfig{Enabled: false},
					SparkExecutorGcTime:                          MetricConfig{Enabled: false},
					SparkExecutorGcTime:                          MetricConfig{Enabled: false},
					SparkExecutorInputSize:                       MetricConfig{Enabled: false},
					SparkExecutorJvmMemory:                       MetricConfig{Enabled: false},
					SparkExecutorMemoryExecution:                 MetricConfig{Enabled: false},
					SparkExecutorMemoryPool:                      MetricConfig{Enabled: false},
					SparkExecutorMemoryStorage:                   MetricConfig{Enabled: false},
					SparkExecutorMemoryUsage:                     MetricConfig{Enabled: false},
					SparkExecutorShuffleIoSize:                   MetricConfig{Enabled: false},
					SparkExecutorStorageMemoryTotal:              MetricConfig{Enabled: false},
					SparkExecutorStorageMemoryUsed:               MetricConfig{Enabled: false},
					SparkExecutorTasksActive:                     MetricConfig{Enabled: false},
					SparkExecutorTasksMax:                        MetricConfig{Enabled: false},
					SparkExecutorTasksResults:                    MetricConfig{Enabled: false},
					SparkExecutorTime:                            MetricConfig{Enabled: false},
					SparkHiveExternalCatalogFileCacheHits:        MetricConfig{Enabled: false},
					SparkHiveExternalCatalogFilesDiscovered:      MetricConfig{Enabled: false},
					SparkHiveExternalCatalogHiveClientCalls:      MetricConfig{Enabled: false},
					SparkHiveExternalCatalogParallelListingJobs:  MetricConfig{Enabled: false},
					SparkHiveExternalCatalogPartitionsFetched:    MetricConfig{Enabled: false},
					SparkJobStagesActive:                         MetricConfig{Enabled: false},
					SparkJobStagesResults:                        MetricConfig{Enabled: false},
					SparkJobTasksActive:                          MetricConfig{Enabled: false},
					SparkJobTasksResults:                         MetricConfig{Enabled: false},
					SparkJvmCPUTime:                              MetricConfig{Enabled: false},
					SparkLiveListenerBusEventsDropped:            MetricConfig{Enabled: false},
					SparkLiveListenerBusEventsPosted:             MetricConfig{Enabled: false},
					SparkLiveListenerBusProcessingTimeAverage:    MetricConfig{Enabled: false},
					SparkLiveListenerBusQueueSize:                MetricConfig{Enabled: false},
					SparkStageDiskSpilled:                        MetricConfig{Enabled: false},
					SparkStageExecutorCPUTime:                    MetricConfig{Enabled: false},
					SparkStageExecutorRunTime:                    MetricConfig{Enabled: false},
					SparkStageIoRecords:                          MetricConfig{Enabled: false},
					SparkStageIoSize:                             MetricConfig{Enabled: false},
					SparkStageJvmGcTime:                          MetricConfig{Enabled: false},
					SparkStageMemoryPeak:                         MetricConfig{Enabled: false},
					SparkStageMemorySpilled:                      MetricConfig{Enabled: false},
					SparkStageShuffleBlocksFetched:               MetricConfig{Enabled: false},
					SparkStageShuffleFetchWaitTime:               MetricConfig{Enabled: false},
					SparkStageShuffleIoDisk:                      MetricConfig{Enabled: false},
					SparkStageShuffleIoRecords:                   MetricConfig{Enabled: false},
					SparkStageShuffleIoSize:                      MetricConfig{Enabled: false},
					SparkStageShuffleWriteTime:                   MetricConfig{Enabled: false},
					SparkStageTaskActive:                         MetricConfig{Enabled: false},
					SparkStageTaskResultSize:                     MetricConfig{Enabled: false},
					SparkStageTaskResults:                        MetricConfig{Enabled: false},
				},
				ResourceAttributes: ResourceAttributesConfig{
					SparkApplicationID:   ResourceAttributeConfig{Enabled: false},
					SparkApplicationName: ResourceAttributeConfig{Enabled: false},
					SparkComponentType:   ResourceAttributeConfig{Enabled: false},
					SparkExecutorID:      ResourceAttributeConfig{Enabled: false},
					SparkJobID:           ResourceAttributeConfig{Enabled: false},
					SparkStageID:         ResourceAttributeConfig{Enabled: false},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadMetricsBuilderConfig(t, tt.name)
			if diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(MetricConfig{}, ResourceAttributeConfig{})); diff != "" {
				t.Errorf("Config mismatch (-expected +actual):\n%s", diff)
			}
		})
	}
}

func loadMetricsBuilderConfig(t *testing.T, name string) MetricsBuilderConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	cfg := DefaultMetricsBuilderConfig()
	require.NoError(t, component.UnmarshalConfig(sub, &cfg))
	return cfg
}
