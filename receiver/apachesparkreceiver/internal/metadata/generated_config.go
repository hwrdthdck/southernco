// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for apachespark metrics.
type MetricsConfig struct {
	SparkBlockManagerDiskUsage                   MetricConfig `mapstructure:"spark.block_manager.disk.usage"`
	SparkBlockManagerMemoryRemaining             MetricConfig `mapstructure:"spark.block_manager.memory.remaining"`
	SparkBlockManagerMemoryUsed                  MetricConfig `mapstructure:"spark.block_manager.memory.used"`
	SparkCodeGeneratorCompilationAverageTime     MetricConfig `mapstructure:"spark.code_generator.compilation.average_time"`
	SparkCodeGeneratorCompilationCount           MetricConfig `mapstructure:"spark.code_generator.compilation.count"`
	SparkCodeGeneratorGeneratedClassAverageSize  MetricConfig `mapstructure:"spark.code_generator.generated_class.average_size"`
	SparkCodeGeneratorGeneratedClassCount        MetricConfig `mapstructure:"spark.code_generator.generated_class.count"`
	SparkCodeGeneratorGeneratedMethodAverageSize MetricConfig `mapstructure:"spark.code_generator.generated_method.average_size"`
	SparkCodeGeneratorGeneratedMethodCount       MetricConfig `mapstructure:"spark.code_generator.generated_method.count"`
	SparkCodeGeneratorSourceCodeAverageSize      MetricConfig `mapstructure:"spark.code_generator.source_code.average_size"`
	SparkCodeGeneratorSourceCodeOperations       MetricConfig `mapstructure:"spark.code_generator.source_code.operations"`
	SparkComponenntExecutorMemoryExecution       MetricConfig `mapstructure:"spark.componennt.executor.memory.execution"`
	SparkComponentExecutorGcOperations           MetricConfig `mapstructure:"spark.component.executor.gc.operations"`
	SparkComponentExecutorGcTime                 MetricConfig `mapstructure:"spark.component.executor.gc.time"`
	SparkComponentExecutorJvmMemory              MetricConfig `mapstructure:"spark.component.executor.jvm_memory"`
	SparkComponentExecutorMemoryPool             MetricConfig `mapstructure:"spark.component.executor.memory.pool"`
	SparkComponentExecutorMemoryStorage          MetricConfig `mapstructure:"spark.component.executor.memory.storage"`
	SparkComponentJvmCPUTime                     MetricConfig `mapstructure:"spark.component.jvm_cpu_time"`
	SparkDagSchedulerJobsActive                  MetricConfig `mapstructure:"spark.dag_scheduler.jobs.active"`
	SparkDagSchedulerJobsCount                   MetricConfig `mapstructure:"spark.dag_scheduler.jobs.count"`
	SparkDagSchedulerStages                      MetricConfig `mapstructure:"spark.dag_scheduler.stages"`
	SparkDagSchedulerStagesFailed                MetricConfig `mapstructure:"spark.dag_scheduler.stages.failed"`
	SparkExecutorDiskUsage                       MetricConfig `mapstructure:"spark.executor.disk.usage"`
	SparkExecutorGcTime                          MetricConfig `mapstructure:"spark.executor.gc_time"`
	SparkExecutorInputSize                       MetricConfig `mapstructure:"spark.executor.input_size"`
	SparkExecutorMemoryUsage                     MetricConfig `mapstructure:"spark.executor.memory.usage"`
	SparkExecutorShuffleIoSize                   MetricConfig `mapstructure:"spark.executor.shuffle.io.size"`
	SparkExecutorStorageMemoryTotal              MetricConfig `mapstructure:"spark.executor.storage_memory.total"`
	SparkExecutorStorageMemoryUsed               MetricConfig `mapstructure:"spark.executor.storage_memory.used"`
	SparkExecutorTasksActive                     MetricConfig `mapstructure:"spark.executor.tasks.active"`
	SparkExecutorTasksMax                        MetricConfig `mapstructure:"spark.executor.tasks.max"`
	SparkExecutorTasksResults                    MetricConfig `mapstructure:"spark.executor.tasks.results"`
	SparkExecutorTime                            MetricConfig `mapstructure:"spark.executor.time"`
	SparkHiveExternalCatalogFileCacheHits        MetricConfig `mapstructure:"spark.hive_external_catalog.file_cache_hits"`
	SparkHiveExternalCatalogFilesDiscovered      MetricConfig `mapstructure:"spark.hive_external_catalog.files_discovered"`
	SparkHiveExternalCatalogHiveClientCalls      MetricConfig `mapstructure:"spark.hive_external_catalog.hive_client_calls"`
	SparkHiveExternalCatalogParallelListingJobs  MetricConfig `mapstructure:"spark.hive_external_catalog.parallel_listing_jobs"`
	SparkHiveExternalCatalogPartitionsFetched    MetricConfig `mapstructure:"spark.hive_external_catalog.partitions_fetched"`
	SparkJobStagesActive                         MetricConfig `mapstructure:"spark.job.stages.active"`
	SparkJobStagesResults                        MetricConfig `mapstructure:"spark.job.stages.results"`
	SparkJobTasksActive                          MetricConfig `mapstructure:"spark.job.tasks.active"`
	SparkJobTasksResults                         MetricConfig `mapstructure:"spark.job.tasks.results"`
	SparkLiveListenerBusEventsDropped            MetricConfig `mapstructure:"spark.live_listener_bus.events_dropped"`
	SparkLiveListenerBusEventsPosted             MetricConfig `mapstructure:"spark.live_listener_bus.events_posted"`
	SparkLiveListenerBusProcessingTimeAverage    MetricConfig `mapstructure:"spark.live_listener_bus.processing_time.average"`
	SparkLiveListenerBusQueueSize                MetricConfig `mapstructure:"spark.live_listener_bus.queue_size"`
	SparkStageDiskSpilled                        MetricConfig `mapstructure:"spark.stage.disk.spilled"`
	SparkStageExecutorCPUTime                    MetricConfig `mapstructure:"spark.stage.executor.cpu_time"`
	SparkStageExecutorRunTime                    MetricConfig `mapstructure:"spark.stage.executor.run_time"`
	SparkStageIoRecords                          MetricConfig `mapstructure:"spark.stage.io.records"`
	SparkStageIoSize                             MetricConfig `mapstructure:"spark.stage.io.size"`
	SparkStageJvmGcTime                          MetricConfig `mapstructure:"spark.stage.jvm_gc_time"`
	SparkStageMemoryPeak                         MetricConfig `mapstructure:"spark.stage.memory.peak"`
	SparkStageMemorySpilled                      MetricConfig `mapstructure:"spark.stage.memory.spilled"`
	SparkStageShuffleBlocksFetched               MetricConfig `mapstructure:"spark.stage.shuffle.blocks_fetched"`
	SparkStageShuffleFetchWaitTime               MetricConfig `mapstructure:"spark.stage.shuffle.fetch_wait_time"`
	SparkStageShuffleIoDisk                      MetricConfig `mapstructure:"spark.stage.shuffle.io.disk"`
	SparkStageShuffleIoRecords                   MetricConfig `mapstructure:"spark.stage.shuffle.io.records"`
	SparkStageShuffleIoSize                      MetricConfig `mapstructure:"spark.stage.shuffle.io.size"`
	SparkStageShuffleWriteTime                   MetricConfig `mapstructure:"spark.stage.shuffle.write_time"`
	SparkStageTaskActive                         MetricConfig `mapstructure:"spark.stage.task.active"`
	SparkStageTaskResultSize                     MetricConfig `mapstructure:"spark.stage.task.result_size"`
	SparkStageTaskResults                        MetricConfig `mapstructure:"spark.stage.task.results"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		SparkBlockManagerDiskUsage: MetricConfig{
			Enabled: true,
		},
		SparkBlockManagerMemoryRemaining: MetricConfig{
			Enabled: true,
		},
		SparkBlockManagerMemoryUsed: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorCompilationAverageTime: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorCompilationCount: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorGeneratedClassAverageSize: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorGeneratedClassCount: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorGeneratedMethodAverageSize: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorGeneratedMethodCount: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorSourceCodeAverageSize: MetricConfig{
			Enabled: true,
		},
		SparkCodeGeneratorSourceCodeOperations: MetricConfig{
			Enabled: true,
		},
		SparkComponenntExecutorMemoryExecution: MetricConfig{
			Enabled: true,
		},
		SparkComponentExecutorGcOperations: MetricConfig{
			Enabled: true,
		},
		SparkComponentExecutorGcTime: MetricConfig{
			Enabled: true,
		},
		SparkComponentExecutorJvmMemory: MetricConfig{
			Enabled: true,
		},
		SparkComponentExecutorMemoryPool: MetricConfig{
			Enabled: true,
		},
		SparkComponentExecutorMemoryStorage: MetricConfig{
			Enabled: true,
		},
		SparkComponentJvmCPUTime: MetricConfig{
			Enabled: true,
		},
		SparkDagSchedulerJobsActive: MetricConfig{
			Enabled: true,
		},
		SparkDagSchedulerJobsCount: MetricConfig{
			Enabled: true,
		},
		SparkDagSchedulerStages: MetricConfig{
			Enabled: true,
		},
		SparkDagSchedulerStagesFailed: MetricConfig{
			Enabled: true,
		},
		SparkExecutorDiskUsage: MetricConfig{
			Enabled: true,
		},
		SparkExecutorGcTime: MetricConfig{
			Enabled: true,
		},
		SparkExecutorInputSize: MetricConfig{
			Enabled: true,
		},
		SparkExecutorMemoryUsage: MetricConfig{
			Enabled: true,
		},
		SparkExecutorShuffleIoSize: MetricConfig{
			Enabled: true,
		},
		SparkExecutorStorageMemoryTotal: MetricConfig{
			Enabled: true,
		},
		SparkExecutorStorageMemoryUsed: MetricConfig{
			Enabled: true,
		},
		SparkExecutorTasksActive: MetricConfig{
			Enabled: true,
		},
		SparkExecutorTasksMax: MetricConfig{
			Enabled: true,
		},
		SparkExecutorTasksResults: MetricConfig{
			Enabled: true,
		},
		SparkExecutorTime: MetricConfig{
			Enabled: true,
		},
		SparkHiveExternalCatalogFileCacheHits: MetricConfig{
			Enabled: true,
		},
		SparkHiveExternalCatalogFilesDiscovered: MetricConfig{
			Enabled: true,
		},
		SparkHiveExternalCatalogHiveClientCalls: MetricConfig{
			Enabled: true,
		},
		SparkHiveExternalCatalogParallelListingJobs: MetricConfig{
			Enabled: true,
		},
		SparkHiveExternalCatalogPartitionsFetched: MetricConfig{
			Enabled: true,
		},
		SparkJobStagesActive: MetricConfig{
			Enabled: true,
		},
		SparkJobStagesResults: MetricConfig{
			Enabled: true,
		},
		SparkJobTasksActive: MetricConfig{
			Enabled: true,
		},
		SparkJobTasksResults: MetricConfig{
			Enabled: true,
		},
		SparkLiveListenerBusEventsDropped: MetricConfig{
			Enabled: true,
		},
		SparkLiveListenerBusEventsPosted: MetricConfig{
			Enabled: true,
		},
		SparkLiveListenerBusProcessingTimeAverage: MetricConfig{
			Enabled: true,
		},
		SparkLiveListenerBusQueueSize: MetricConfig{
			Enabled: true,
		},
		SparkStageDiskSpilled: MetricConfig{
			Enabled: true,
		},
		SparkStageExecutorCPUTime: MetricConfig{
			Enabled: true,
		},
		SparkStageExecutorRunTime: MetricConfig{
			Enabled: true,
		},
		SparkStageIoRecords: MetricConfig{
			Enabled: true,
		},
		SparkStageIoSize: MetricConfig{
			Enabled: true,
		},
		SparkStageJvmGcTime: MetricConfig{
			Enabled: true,
		},
		SparkStageMemoryPeak: MetricConfig{
			Enabled: true,
		},
		SparkStageMemorySpilled: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleBlocksFetched: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleFetchWaitTime: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleIoDisk: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleIoRecords: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleIoSize: MetricConfig{
			Enabled: true,
		},
		SparkStageShuffleWriteTime: MetricConfig{
			Enabled: true,
		},
		SparkStageTaskActive: MetricConfig{
			Enabled: true,
		},
		SparkStageTaskResultSize: MetricConfig{
			Enabled: true,
		},
		SparkStageTaskResults: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesConfig provides config for apachespark resource attributes.
type ResourceAttributesConfig struct {
	SparkApplicationID   ResourceAttributeConfig `mapstructure:"spark.application.id"`
	SparkApplicationName ResourceAttributeConfig `mapstructure:"spark.application.name"`
	SparkComponentType   ResourceAttributeConfig `mapstructure:"spark.component.type"`
	SparkExecutorID      ResourceAttributeConfig `mapstructure:"spark.executor.id"`
	SparkJobID           ResourceAttributeConfig `mapstructure:"spark.job.id"`
	SparkStageID         ResourceAttributeConfig `mapstructure:"spark.stage.id"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		SparkApplicationID: ResourceAttributeConfig{
			Enabled: true,
		},
		SparkApplicationName: ResourceAttributeConfig{
			Enabled: true,
		},
		SparkComponentType: ResourceAttributeConfig{
			Enabled: true,
		},
		SparkExecutorID: ResourceAttributeConfig{
			Enabled: true,
		},
		SparkJobID: ResourceAttributeConfig{
			Enabled: true,
		},
		SparkStageID: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for apachespark metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
