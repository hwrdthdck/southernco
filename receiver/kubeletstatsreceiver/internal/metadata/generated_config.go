// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricSettings provides common settings for a particular metric.
type MetricSettings struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricSettings) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsSettings provides settings for kubeletstatsreceiver metrics.
type MetricsSettings struct {
	ContainerCPUTime               MetricSettings `mapstructure:"container.cpu.time"`
	ContainerCPUUtilization        MetricSettings `mapstructure:"container.cpu.utilization"`
	ContainerFilesystemAvailable   MetricSettings `mapstructure:"container.filesystem.available"`
	ContainerFilesystemCapacity    MetricSettings `mapstructure:"container.filesystem.capacity"`
	ContainerFilesystemUsage       MetricSettings `mapstructure:"container.filesystem.usage"`
	ContainerMemoryAvailable       MetricSettings `mapstructure:"container.memory.available"`
	ContainerMemoryMajorPageFaults MetricSettings `mapstructure:"container.memory.major_page_faults"`
	ContainerMemoryPageFaults      MetricSettings `mapstructure:"container.memory.page_faults"`
	ContainerMemoryRss             MetricSettings `mapstructure:"container.memory.rss"`
	ContainerMemoryUsage           MetricSettings `mapstructure:"container.memory.usage"`
	ContainerMemoryWorkingSet      MetricSettings `mapstructure:"container.memory.working_set"`
	K8sNodeCPUTime                 MetricSettings `mapstructure:"k8s.node.cpu.time"`
	K8sNodeCPUUtilization          MetricSettings `mapstructure:"k8s.node.cpu.utilization"`
	K8sNodeFilesystemAvailable     MetricSettings `mapstructure:"k8s.node.filesystem.available"`
	K8sNodeFilesystemCapacity      MetricSettings `mapstructure:"k8s.node.filesystem.capacity"`
	K8sNodeFilesystemUsage         MetricSettings `mapstructure:"k8s.node.filesystem.usage"`
	K8sNodeMemoryAvailable         MetricSettings `mapstructure:"k8s.node.memory.available"`
	K8sNodeMemoryMajorPageFaults   MetricSettings `mapstructure:"k8s.node.memory.major_page_faults"`
	K8sNodeMemoryPageFaults        MetricSettings `mapstructure:"k8s.node.memory.page_faults"`
	K8sNodeMemoryRss               MetricSettings `mapstructure:"k8s.node.memory.rss"`
	K8sNodeMemoryUsage             MetricSettings `mapstructure:"k8s.node.memory.usage"`
	K8sNodeMemoryWorkingSet        MetricSettings `mapstructure:"k8s.node.memory.working_set"`
	K8sNodeNetworkErrors           MetricSettings `mapstructure:"k8s.node.network.errors"`
	K8sNodeNetworkIo               MetricSettings `mapstructure:"k8s.node.network.io"`
	K8sPodCPUTime                  MetricSettings `mapstructure:"k8s.pod.cpu.time"`
	K8sPodCPUUtilization           MetricSettings `mapstructure:"k8s.pod.cpu.utilization"`
	K8sPodFilesystemAvailable      MetricSettings `mapstructure:"k8s.pod.filesystem.available"`
	K8sPodFilesystemCapacity       MetricSettings `mapstructure:"k8s.pod.filesystem.capacity"`
	K8sPodFilesystemUsage          MetricSettings `mapstructure:"k8s.pod.filesystem.usage"`
	K8sPodMemoryAvailable          MetricSettings `mapstructure:"k8s.pod.memory.available"`
	K8sPodMemoryMajorPageFaults    MetricSettings `mapstructure:"k8s.pod.memory.major_page_faults"`
	K8sPodMemoryPageFaults         MetricSettings `mapstructure:"k8s.pod.memory.page_faults"`
	K8sPodMemoryRss                MetricSettings `mapstructure:"k8s.pod.memory.rss"`
	K8sPodMemoryUsage              MetricSettings `mapstructure:"k8s.pod.memory.usage"`
	K8sPodMemoryWorkingSet         MetricSettings `mapstructure:"k8s.pod.memory.working_set"`
	K8sPodNetworkErrors            MetricSettings `mapstructure:"k8s.pod.network.errors"`
	K8sPodNetworkIo                MetricSettings `mapstructure:"k8s.pod.network.io"`
	K8sVolumeAvailable             MetricSettings `mapstructure:"k8s.volume.available"`
	K8sVolumeCapacity              MetricSettings `mapstructure:"k8s.volume.capacity"`
	K8sVolumeInodes                MetricSettings `mapstructure:"k8s.volume.inodes"`
	K8sVolumeInodesFree            MetricSettings `mapstructure:"k8s.volume.inodes.free"`
	K8sVolumeInodesUsed            MetricSettings `mapstructure:"k8s.volume.inodes.used"`
}

func DefaultMetricsSettings() MetricsSettings {
	return MetricsSettings{
		ContainerCPUTime: MetricSettings{
			Enabled: true,
		},
		ContainerCPUUtilization: MetricSettings{
			Enabled: true,
		},
		ContainerFilesystemAvailable: MetricSettings{
			Enabled: true,
		},
		ContainerFilesystemCapacity: MetricSettings{
			Enabled: true,
		},
		ContainerFilesystemUsage: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryAvailable: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryMajorPageFaults: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryPageFaults: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryRss: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryUsage: MetricSettings{
			Enabled: true,
		},
		ContainerMemoryWorkingSet: MetricSettings{
			Enabled: true,
		},
		K8sNodeCPUTime: MetricSettings{
			Enabled: true,
		},
		K8sNodeCPUUtilization: MetricSettings{
			Enabled: true,
		},
		K8sNodeFilesystemAvailable: MetricSettings{
			Enabled: true,
		},
		K8sNodeFilesystemCapacity: MetricSettings{
			Enabled: true,
		},
		K8sNodeFilesystemUsage: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryAvailable: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryMajorPageFaults: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryPageFaults: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryRss: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryUsage: MetricSettings{
			Enabled: true,
		},
		K8sNodeMemoryWorkingSet: MetricSettings{
			Enabled: true,
		},
		K8sNodeNetworkErrors: MetricSettings{
			Enabled: true,
		},
		K8sNodeNetworkIo: MetricSettings{
			Enabled: true,
		},
		K8sPodCPUTime: MetricSettings{
			Enabled: true,
		},
		K8sPodCPUUtilization: MetricSettings{
			Enabled: true,
		},
		K8sPodFilesystemAvailable: MetricSettings{
			Enabled: true,
		},
		K8sPodFilesystemCapacity: MetricSettings{
			Enabled: true,
		},
		K8sPodFilesystemUsage: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryAvailable: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryMajorPageFaults: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryPageFaults: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryRss: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryUsage: MetricSettings{
			Enabled: true,
		},
		K8sPodMemoryWorkingSet: MetricSettings{
			Enabled: true,
		},
		K8sPodNetworkErrors: MetricSettings{
			Enabled: true,
		},
		K8sPodNetworkIo: MetricSettings{
			Enabled: true,
		},
		K8sVolumeAvailable: MetricSettings{
			Enabled: true,
		},
		K8sVolumeCapacity: MetricSettings{
			Enabled: true,
		},
		K8sVolumeInodes: MetricSettings{
			Enabled: true,
		},
		K8sVolumeInodesFree: MetricSettings{
			Enabled: true,
		},
		K8sVolumeInodesUsed: MetricSettings{
			Enabled: true,
		},
	}
}

// ResourceAttributeSettings provides common settings for a particular resource attribute.
type ResourceAttributeSettings struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesSettings provides settings for kubeletstatsreceiver resource attributes.
type ResourceAttributesSettings struct {
	AwsVolumeID                  ResourceAttributeSettings `mapstructure:"aws.volume.id"`
	ContainerID                  ResourceAttributeSettings `mapstructure:"container.id"`
	FsType                       ResourceAttributeSettings `mapstructure:"fs.type"`
	GcePdName                    ResourceAttributeSettings `mapstructure:"gce.pd.name"`
	GlusterfsEndpointsName       ResourceAttributeSettings `mapstructure:"glusterfs.endpoints.name"`
	GlusterfsPath                ResourceAttributeSettings `mapstructure:"glusterfs.path"`
	K8sContainerName             ResourceAttributeSettings `mapstructure:"k8s.container.name"`
	K8sNamespaceName             ResourceAttributeSettings `mapstructure:"k8s.namespace.name"`
	K8sNodeName                  ResourceAttributeSettings `mapstructure:"k8s.node.name"`
	K8sPersistentvolumeclaimName ResourceAttributeSettings `mapstructure:"k8s.persistentvolumeclaim.name"`
	K8sPodName                   ResourceAttributeSettings `mapstructure:"k8s.pod.name"`
	K8sPodUID                    ResourceAttributeSettings `mapstructure:"k8s.pod.uid"`
	K8sVolumeName                ResourceAttributeSettings `mapstructure:"k8s.volume.name"`
	K8sVolumeType                ResourceAttributeSettings `mapstructure:"k8s.volume.type"`
	Partition                    ResourceAttributeSettings `mapstructure:"partition"`
}

func DefaultResourceAttributesSettings() ResourceAttributesSettings {
	return ResourceAttributesSettings{
		AwsVolumeID: ResourceAttributeSettings{
			Enabled: true,
		},
		ContainerID: ResourceAttributeSettings{
			Enabled: true,
		},
		FsType: ResourceAttributeSettings{
			Enabled: true,
		},
		GcePdName: ResourceAttributeSettings{
			Enabled: true,
		},
		GlusterfsEndpointsName: ResourceAttributeSettings{
			Enabled: true,
		},
		GlusterfsPath: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sContainerName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sNamespaceName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sNodeName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sPersistentvolumeclaimName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sPodName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sPodUID: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sVolumeName: ResourceAttributeSettings{
			Enabled: true,
		},
		K8sVolumeType: ResourceAttributeSettings{
			Enabled: true,
		},
		Partition: ResourceAttributeSettings{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for kubeletstatsreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsSettings            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesSettings `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsSettings(),
		ResourceAttributes: DefaultResourceAttributesSettings(),
	}
}
