// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for splunkenterprise metrics.
type MetricsConfig struct {
	SplunkDataIndexesExtendedBucketCount       MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.count"`
	SplunkDataIndexesExtendedBucketDirsCount   MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.dirs.count"`
	SplunkDataIndexesExtendedBucketDirsSize    MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.dirs.size"`
	SplunkDataIndexesExtendedBucketEventCount  MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.event.count"`
	SplunkDataIndexesExtendedBucketHotCount    MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.hot.count"`
	SplunkDataIndexesExtendedBucketWarmCount   MetricConfig `mapstructure:"splunk.data.indexes.extended.bucket.warm.count"`
	SplunkDataIndexesExtendedEventCount        MetricConfig `mapstructure:"splunk.data.indexes.extended.event.count"`
	SplunkDataIndexesExtendedRawSize           MetricConfig `mapstructure:"splunk.data.indexes.extended.raw.size"`
	SplunkDataIndexesExtendedTotalSize         MetricConfig `mapstructure:"splunk.data.indexes.extended.total.size"`
	SplunkLicenseIndexUsage                    MetricConfig `mapstructure:"splunk.license.index.usage"`
	SplunkServerIntrospectionIndexerThroughput MetricConfig `mapstructure:"splunk.server.introspection.indexer.throughput"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		SplunkDataIndexesExtendedBucketCount: MetricConfig{
			Enabled: true,
		},
		SplunkDataIndexesExtendedBucketDirsCount: MetricConfig{
			Enabled: false,
		},
		SplunkDataIndexesExtendedBucketDirsSize: MetricConfig{
			Enabled: false,
		},
		SplunkDataIndexesExtendedBucketEventCount: MetricConfig{
			Enabled: false,
		},
		SplunkDataIndexesExtendedBucketHotCount: MetricConfig{
			Enabled: false,
		},
		SplunkDataIndexesExtendedBucketWarmCount: MetricConfig{
			Enabled: false,
		},
		SplunkDataIndexesExtendedEventCount: MetricConfig{
			Enabled: true,
		},
		SplunkDataIndexesExtendedRawSize: MetricConfig{
			Enabled: true,
		},
		SplunkDataIndexesExtendedTotalSize: MetricConfig{
			Enabled: true,
		},
		SplunkLicenseIndexUsage: MetricConfig{
			Enabled: true,
		},
		SplunkServerIntrospectionIndexerThroughput: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for splunkenterprise metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
