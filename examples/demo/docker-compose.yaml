version: "2"
services:

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      # - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4377:4317"  # otlp grpc
      - "4388:4318"  # otlp http
      # - "9411:9411"   # zipkin
  
  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"

  # # Jaeger
  # jaeger-all-in-one:
  #   image: jaegertracing/all-in-one:latest
  #   restart: always
  #   ports:
  #     - "16686:16686"
  #     - "14268"
  #     - "14250"

  # # Zipkin
  # zipkin-all-in-one:
  #   image: openzipkin/zipkin:latest
  #   restart: always
  #   ports:
  #     - "9411:9411"

  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      # - jaeger-all-in-one
      # - zipkin-all-in-one
      - tempo

  demo-client-0:
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-broker:7080/hello
      - HOSTNAME=demo-client1
    depends_on:
      - demo-broker
  
  demo-client-1:
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
      - HOSTNAME=demo-client2
    depends_on:
      - demo-broker

  demo-broker:
    build:
      dockerfile: Dockerfile
      context: ./broker
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
    depends_on:
      - demo-server

  demo-server:
    build:
      dockerfile: Dockerfile
      context: ./server
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    ports:
      - "7080"
    depends_on:
      - otel-collector

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
