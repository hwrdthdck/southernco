receivers:
  kafkametrics:
    brokers:
      - pkc-p11xm.us-east-1.aws.confluent.cloud:9092
    protocol_version: 2.0.0
    scrapers:
      - brokers
      - topics
      - consumers
    auth:
      sasl:
        username: WQCM423SHEOR4JTI
        password: +ElGWWiCEhpaffi6qbpHcUIsCa7fVPdnnIXDVv4P9Cn9nq+4NXzgI1HRkJUvQUTQ
        mechanism: PLAIN
      tls:
        insecure_skip_verify: false
    collection_interval: 30s
  otlp:
    protocols:
      grpc:
        endpoint: localhost:4317
      http:
        endpoint: localhost:4318


  prometheus:
    config:
      scrape_configs:
        - job_name: "confluent"
          scrape_interval: 60s # Do not go any lower than this or you'll hit rate limits
          static_configs:
            - targets: ["api.telemetry.confluent.cloud"]
          scheme: https
          basic_auth:
            username: UUC44UI5IHPL2DBS
            password: GGxJTDCfx34Lc2+TXoYSghzPRQo0caZuHa7hVMdNJo90405NgTmYk+afN3G+cWZe
          metrics_path: /v2/metrics/cloud/export
          params:
            "resource.kafka.id":
              - lkc-j8d3pm
exporters:
  otlp:
    endpoint: https://otlp.nr-data.net:4317
    headers:
      api-key: 990e51ef617558ed94e98be5a7c6e31c6f64NRAL
  logging:
    verbosity: normal
processors:
  batch:
  memory_limiter:
    limit_mib: 400
    spike_limit_mib: 100
    check_interval: 5s
service:
  telemetry:
    logs:
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [otlp, logging]
    metrics/kafka:
      receivers: [kafkametrics]
      processors: [batch]
      exporters: [otlp]
